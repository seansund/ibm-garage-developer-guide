{"version":3,"sources":["webpack:///./src/pages/admin/config-install/index.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"oQAOaA,G,UAAe,IAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAqBN,EAAc,sBACnCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,eAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAI5E,YAACP,EAAD,CAAiBO,QAAQ,mBACvB,0FAEF,YAACN,EAAD,CAAoBM,QAAQ,sBAC1B,qBAAG,sBAAQC,WAAW,KAAnB,QAAH,QAAoD,sBAAQA,WAAW,KAAnB,6BAApD,yCAA2J,6BAAGA,WAAW,KAAQ,CAC7K,KAAQ,mCAD+I,6BAA3J,6CAIF,uDACA,mPACA,sBACE,kBAAIA,WAAW,MAAf,kKAAuL,0BAAYA,WAAW,MAAvB,8CAAvL,WAA0R,0BAAYA,WAAW,MAAvB,kBAA1R,wCAA8X,0BAAYA,WAAW,MAAvB,yBAA9X,MACA,kBAAIA,WAAW,MAAf,wBAA6C,6BAAGA,WAAW,MAAS,CAChE,KAAQ,4BADiC,uBAA7C,iIAGA,kBAAIA,WAAW,MAAf,sCAA2D,6BAAGA,WAAW,MAAS,CAC9E,KAAQ,2BAD+C,WAG3D,kBAAIA,WAAW,MAAf,gBAAqC,6BAAGA,WAAW,MAAS,CACxD,KAAQ,wBADyB,mBAArC,QAEqC,6BAAGA,WAAW,MAAS,CACxD,KAAQ,uBADyB,6BAFrC,gBAMF,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,2DAA+E,sBAAQA,WAAW,KAAnB,QAA/E,yQAI+B,6BAAGA,WAAW,KAAQ,CACjD,KAAQ,6BADmB,uBAIjC,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,8JAGF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,oBAAwC,6BAAGA,WAAW,KAAQ,CAC1D,KAAQ,+BACP,YAAC,IAAD,CAASZ,KAAK,YAAYW,QAAQ,cACvC,kBAAIC,WAAW,MACb,kBAAIA,WAAW,MAAf,8DAAmF,0BAAYA,WAAW,MAAvB,wDAIvF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,wBAA4C,6BAAGA,WAAW,KAAQ,CAC9D,KAAQ,gCADgC,2BAI9C,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAK,6BAAGA,WAAW,KAAQ,CACrC,KAAQ,0DADO,wBAAnB,gDAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,+BAAmD,sBAAQA,WAAW,KAAnB,aAAnD,iCAAkI,0BAAYA,WAAW,KAAvB,QAAlI,eAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,oDAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,oFAORH,EAAWI,gBAAiB","file":"component---src-pages-admin-config-install-index-mdx-2642c0964dba368a143d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Configure the toolkit development environment after installation`}</p>\n    </PageDescription>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note`}</strong>{`: An `}<strong parentName=\"p\">{`environment administrator`}</strong>{` performs the steps on this page. See `}<a parentName=\"p\" {...{\n          \"href\": \"/admin/plan-installation#roles\"\n        }}>{`Plan Installation > Roles`}</a>{` for the overview of the roles involved.`}</p>\n    </InlineNotification>\n    <h2>{`Post installation Tools setup`}</h2>\n    <p>{`The following post installation setup is required. To get the developers enabled quickly, make sure you have completed at least post installation tasks. The customization is optional and down to development team needs.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Configure the RBAC rules in the development cluster. This restricts who can change the parts of the cluster where the tools are installed. Run the RBAC script `}<inlineCode parentName=\"li\">{`./terraform/scripts/rbac.sh {ACCESS-GROUP}`}</inlineCode>{`, where `}<inlineCode parentName=\"li\">{`{ACCESS-GROUP}`}</inlineCode>{` is the name of the user group (i.e. `}<inlineCode parentName=\"li\">{`{resource_group}-USER`}</inlineCode>{`).`}</li>\n      <li parentName=\"ul\">{`Perform the steps in `}<a parentName=\"li\" {...{\n          \"href\": \"/admin/config-dashboard\"\n        }}>{`Configure Dashboard`}</a>{` to add tiles and menu items for the tools that are external to the cluster: the Image Registry, GitHub, LogDNA, Sysdig, etc.`}</li>\n      <li parentName=\"ul\">{`Check you log data if flowing into `}<a parentName=\"li\" {...{\n          \"href\": \"/guides/log-management\"\n        }}>{`LogDNA`}</a></li>\n      <li parentName=\"ul\">{`Complete the `}<a parentName=\"li\" {...{\n          \"href\": \"/admin/sysdig-setup\"\n        }}>{`setup of Sysdig`}</a>{` and `}<a parentName=\"li\" {...{\n          \"href\": \"/guides/monitoring\"\n        }}>{`check the monitoring data`}</a>{` is flowing`}</li>\n    </ul>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Managing development assets is an important part of any `}<strong parentName=\"p\">{`SDLC`}</strong>{`, The open\nsource version of Artifactory has been installed into the cluster, This\nenables the full end to end process SDLC to be demostrated. This\nversion requires some manual configuration after its installation. These\nthese instructions can be found here `}<a parentName=\"p\" {...{\n            \"href\": \"/admin/artifactory-setup\"\n          }}>{`Artifactory Setup`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Complete the `}{`[Argo CD Setup]`}{`(continuous-delivery#configuring-gitops-with\n-argo-cd), this configures ArgoCD to use Artifactory as a Helm Repository`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Test opening the `}<a parentName=\"p\" {...{\n            \"href\": \"/getting-started/dashboard\"\n          }}><Globals name=\"dashboard\" mdxType=\"Globals\" /></a></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Run either or all of the CLI options to load the dashboard `}<inlineCode parentName=\"li\">{`oc dashboard\n| kubectl dashboard | igc dashboard`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Test the pipeline by `}<a parentName=\"p\" {...{\n            \"href\": \"/getting-started/deploy-app\"\n          }}>{`deploying a first app`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"/practical/inventory-part2#using-cd-to-deploy-to-test\"\n          }}>{`Set up a GitOps repo`}</a>{` to validate ArgoCD setup and configuration`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Generated new passwords for `}<strong parentName=\"p\">{`SonarQube`}</strong>{` and update the secret in the `}<inlineCode parentName=\"p\">{`tool`}</inlineCode>{` namespace`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Test all the installed tools with new passwords`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Test end to end flow for an application and validate the content in each tool`}</p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}