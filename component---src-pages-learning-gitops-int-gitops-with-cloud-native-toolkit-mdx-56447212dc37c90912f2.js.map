{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./src/gatsby-theme-carbon/templates/Default.js","webpack:///./src/pages/learning/gitops-int/gitops-with-cloud-native-toolkit.mdx"],"names":["module","exports","PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","Utils","name","_frontmatter","PageDescription","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-learning-gitops-int-gitops-with-cloud-native-toolkit-mdx-56447212dc37c90912f2.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import React from 'react';\nimport slugify from 'slugify';\nimport {graphql, useStaticQuery} from 'gatsby';\n\nimport Utils from 'gatsby-theme-carbon/src/components/Utils';\nimport Layout from 'gatsby-theme-carbon/src/components/Layout';\nimport PageHeader from 'gatsby-theme-carbon/src/components/PageHeader';\nimport EditLink from 'gatsby-theme-carbon/src/components/EditLink';\nimport PageTabs from 'gatsby-theme-carbon/src/components/PageTabs';\nimport Main from 'gatsby-theme-carbon/src/components/Main';\nimport useMetadata from 'gatsby-theme-carbon/src/util/hooks/useMetadata';\n\n// Copy of gatsby-theme-carbon/src/templates/Default with the NextPrevious widget removed\n\nconst Default = ({ pageContext, children, location, Title }) => {\n    const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n    const {\n        tabs,\n        title,\n        theme: frontmatterTheme,\n        description,\n        keywords,\n    } = frontmatter;\n\n    const { interiorTheme } = useMetadata();\n\n    // get the path prefix if it exists\n    const {\n        site: { pathPrefix },\n    } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY1 {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n    // let gatsby handle prefixing\n    const slug = pathPrefix\n        ? location.pathname.replace(pathPrefix, '')\n        : location.pathname;\n\n    const getCurrentTab = () => {\n        if (!tabs) return '';\n        return (\n            slug.split('/').filter(Boolean).slice(-1)[0] ||\n            slugify(tabs[0], { lower: true })\n        );\n    };\n\n    const currentTab = getCurrentTab();\n\n    const theme = frontmatterTheme || interiorTheme;\n\n    return (\n        <Layout\n            tabs={tabs}\n            homepage={false}\n            theme={theme}\n            pageTitle={title}\n            pageDescription={description}\n            pageKeywords={keywords}\n            titleType={titleType}>\n            <PageHeader\n                title={Title ? <Title /> : title}\n                label=\"label\"\n                tabs={tabs}\n                theme={theme}\n            />\n            {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n            <Main padded>\n                {children}\n                <EditLink relativePagePath={relativePagePath} />\n            </Main>\n            {/*Remove NextPrevious*/}\n            <Utils />\n        </Layout>\n    );\n};\n\nexport default Default;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p><em parentName=\"p\">{`This is a work in progress, come back for updates.`}</em></p>\n      <p>{`Steps to install the `}<Globals name=\"shortName\" mdxType=\"Globals\" />{` in an existing OpenShift cluster using a declarative approach with ArgoCD.`}</p>\n    </PageDescription>\n    <h2>{`Pre-requisites`}</h2>\n    <p>{`The following is required before proceeding to the next section.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Provision an OpenShift cluster.`}</li>\n      <li parentName=\"ul\">{`Install the `}<inlineCode parentName=\"li\">{`oc`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`git`}</inlineCode>{` cli.`}</li>\n      <li parentName=\"ul\">{`Install the `}<a parentName=\"li\" {...{\n          \"href\": \"https://cloudnativetoolkit.dev/getting-started/cli\"\n        }}>{`Cloud Native Toolkit CLI`}</a>{`.`}</li>\n    </ul>\n    <hr></hr>\n    <h2>{`Installation`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Fork the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/cloud-native-toolkit/multi-tenancy-gitops\"\n          }}>{`multi-tenancy-gitops`}</a>{` repository and clone your fork.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`git clone git@github.com:{gitorg}/multi-tenancy-gitops.git\n\ncd multi-tenancy-gitops\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Update the cloned repository with your GitHub Organization.`}</p>\n      </li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`Search and replace all instances of `}<inlineCode parentName=\"li\">{`github.com/cloud-native-toolkit/multi-tenancy-gitops.git`}</inlineCode>{` with `}<inlineCode parentName=\"li\">{`github.com/{gitorg}/multi-tenancy-gitops.git`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Commit and push your changes to your fork.`}\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`git commit -m \"Update github organization\"\ngit push origin master\n`}</code></pre>\n      </li>\n    </ul>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`The gitops repository is structured into different layers (ie. `}<inlineCode parentName=\"li\">{`1-apps`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`2-services`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`3-infra`}</inlineCode>{`).  Each layer is structured in a similar pattern consisting of the following:`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`argocd`}</inlineCode>{` folder contains a set of ArgoCD Application YAMLs.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The set of folder(s) in each layer contains the resource YAMLs which will be deployed.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`tree . -L 2\n.\n├── 0-bootstrap\n│   └── argocd\n├── 1-apps\n│   ├── argocd\n│   └── instances\n├── 2-services\n│   ├── argocd\n│   ├── instances\n│   └── operators\n├── 3-infra\n│   ├── argocd\n│   ├── clusterrole\n│   ├── consolelink\n│   ├── consolenotification\n│   └── namespaces\n├── 4-rhacm\n│   └── argocd\n├── README.md\n└── bootstrap.yaml\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Each `}<inlineCode parentName=\"p\">{`argocd`}</inlineCode>{` folder contains an `}<inlineCode parentName=\"p\">{`active`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`inactive`}</inlineCode>{` sub-folder.  For each layer, select the ArgoCD Appliation YAMLs to deploy and move them into the `}<inlineCode parentName=\"p\">{`active`}</inlineCode>{` folder.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`1-apps/argocd/\n├── active\n└── inactive\n\n2-services/argocd/\n├── active\n└── inactive\n\n3-infra/argocd/\n├── active\n└── inactive\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Commit and push your changes to your fork.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`git commit -m \"Update github organization\"\ngit push origin master\n`}</code></pre>\n      </li>\n    </ul>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`Install the Red Hat OpenShift GitOps operator using the commands below or directly from the OpenShift Web Console.  An instance of ArgoCD will automatically be created in the `}<inlineCode parentName=\"li\">{`openshift-gitops`}</inlineCode>{` namespace.`}\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`oc apply -f 2-services/operators/openshift-gitops/ -n openshift-operators\n`}</code></pre>\n      </li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Verify you can log on to the ArgoCD Web Console.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`# ArgoCD Web Console URL\necho https://$(oc get route argocd-cluster-server -o jsonpath='{ .spec.host }' -n openshift-gitops)\n\n# Admin password\noc extract secret/argocd-cluster-cluster --to=- -n openshift-gitops\n`}</code></pre>\n      </li>\n    </ul>\n    <ol {...{\n      \"start\": 5\n    }}>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Review and apply the custom ClusterRole permissions to the ArgoCD Application Controller service account.  This is required for ArgoCD to create the required Kubernetes resources in target namespaces.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`oc apply -f 3-infra/clusterrole/\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create the bootstrap ArgoCD application.`}</p>\n        <p parentName=\"li\">{` The bootstrap application will create the parent ArgoCD Application for each layer (YAMLs are located in `}<inlineCode parentName=\"p\">{`0-bootstrap`}</inlineCode>{` folder).\nThe parent ArgoCD Applications will subsequently create the ArgoCD Applications in the `}<inlineCode parentName=\"p\">{`/argocd/active`}</inlineCode>{` directory.`}</p>\n        <p parentName=\"li\">{` Depending on what resources have been selected, it will take some time for the ArgoCD to deploy the resources.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`oc apply -f bootstrap.yaml -n openshift-gitops\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`From the OpenShift Web Console, verify the resources (ie, operators, namespaces, etc) have been successfully created and/or deployed.`}</p>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}