{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./src/pages/workshop/setup/index.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./src/gatsby-theme-carbon/templates/Default.js"],"names":["module","exports","name","_frontmatter","PageDescription","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","Utils"],"mappings":"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","file":"component---src-pages-workshop-setup-index-mdx-069fd4c57e7d09256f2b.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Provides the steps to install the `}<Globals name=\"longName\" mdxType=\"Globals\" />{` and setting up the  `}<Globals name=\"longName\" mdxType=\"Globals\" />{` Workshop hands on labs.`}</p>\n    </PageDescription>\n    <div {...{\n      \"className\": \"gatsby-resp-iframe-wrapper\",\n      \"style\": {\n        \"paddingBottom\": \"56.25%\",\n        \"position\": \"relative\",\n        \"height\": \"0\",\n        \"overflow\": \"hidden\"\n      }\n    }}>{` `}<iframe parentName=\"div\" {...{\n        \"src\": \"https://www.youtube.com/embed/aFSt5cW9TlI\",\n        \"frameBorder\": \"0\",\n        \"allow\": \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        \"allowFullScreen\": true,\n        \"style\": {\n          \"position\": \"absolute\",\n          \"top\": \"0\",\n          \"left\": \"0\",\n          \"width\": \"100%\",\n          \"height\": \"100%\"\n        }\n      }}></iframe>{` `}</div>\n    <h2>{`1. Create OpenShift Cluster`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Create an OpenShift Cluster for example:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`The 8 hours free Cluster on `}<a parentName=\"li\" {...{\n              \"href\": \"https://developer.ibm.com/openlabs/openshift\"\n            }}>{`IBM Open Labs`}</a>{` select lab 6 `}<inlineCode parentName=\"li\">{`Bring Your Own Application`}</inlineCode></li>\n          <li parentName=\"ul\">{`Deploy a Cluster on IBM Cloud VPC2 using the `}<a parentName=\"li\" {...{\n              \"href\": \"/getting-started-day-0/provision-cluster/ibm-cloud-vpc\"\n            }}>{`Toolkit`}</a></li>\n          <li parentName=\"ul\">{`On other Clouds using docs from `}<a parentName=\"li\" {...{\n              \"href\": \"https://cloudnativetoolkit.dev/getting-started-day-0/plan-installation/multi-cloud\"\n            }}>{`cloudnativetoolkit.dev/multi-cloud`}</a></li>\n          <li parentName=\"ul\">{`IBM internal DTE Infrastructure access via `}<a parentName=\"li\" {...{\n              \"href\": \"https://ccp-ui.csplab.intranet.ibm.com/\"\n            }}>{`IBM VPN`}</a>{` or `}<a parentName=\"li\" {...{\n              \"href\": \"https://ccp-ui.apps.labprod.ocp.csplab.local/\"\n            }}>{`IBM CSPLAB`}</a></li>\n        </ul>\n      </li>\n    </ul>\n    <h2>{`2. Install IBM Cloud Native Toolkit`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Use one of the install options for example the `}<a parentName=\"li\" {...{\n          \"href\": \"https://cloudnativetoolkit.dev/getting-started-day-0/install-toolkit/quick-install\"\n        }}>{`Quick Install`}</a>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`curl -sfL get.cloudnativetoolkit.dev | sh -\n`}</code></pre>\n      </li>\n    </ul>\n    <h2>{`3. Setup IBM Cloud Native Toolkit Workshop`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Install the foundation for the workshops`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`curl -sfL workshop.cloudnativetoolkit.dev | sh -\n`}</code></pre>\n        <p parentName=\"li\">{`  `}<strong parentName=\"p\">{`Notes`}</strong>{`: `}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`The username and password for Git Admin is `}<inlineCode parentName=\"li\">{`toolkit`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`toolkit`}</inlineCode>{`.  `}</li>\n          <li parentName=\"ul\">{`Usernames `}<inlineCode parentName=\"li\">{`user01`}</inlineCode>{` through `}<inlineCode parentName=\"li\">{`user15`}</inlineCode>{` are configured with a password of `}<inlineCode parentName=\"li\">{`password`}</inlineCode>{`.`}</li>\n          <li parentName=\"ul\">{`Username `}<inlineCode parentName=\"li\">{`userdemo`}</inlineCode>{` is configured with the password `}<inlineCode parentName=\"li\">{`password`}</inlineCode>{`. You can use this username if using the workshop environment\nfor self study or giving a demo.  If you are preparing the environment for a workshop you can remove `}<inlineCode parentName=\"li\">{`userdemo`}</inlineCode>{`\nby running the `}<inlineCode parentName=\"li\">{`uninstall-userdemo.sh`}</inlineCode>{` script which is part of the `}<a parentName=\"li\" {...{\n              \"href\": \"https://github.com/cloud-native-toolkit/cloud-native-toolkit-workshop\"\n            }}>{`workshop`}</a>{` scripts.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2>{`4. (Optional) Customization of the IBM Cloud Native Toolkit Workshop`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`You can customize the Workshop environment by cloning the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/cloud-native-toolkit/cloud-native-toolkit-workshop\"\n          }}>{`workshop`}</a>{` repo`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Some of the most common customizations are:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`You can create more than 15 users by setting a `}<inlineCode parentName=\"p\">{`USER_COUNT`}</inlineCode>{` environment variable. For example to configure 30 users use the command`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`export USER_COUNT=30 \n`}</code></pre>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`You can create more than 15 projects by setting a `}<inlineCode parentName=\"p\">{`PROJECT_COUNT`}</inlineCode>{` environment variable. For example to configure 30 projects use the command`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`export PROJECT_COUNT=30 \n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Once you have finished configuring your customizations, login to the cluster from the cli and run the `}<inlineCode parentName=\"p\">{`scripts/install.sh`}</inlineCode>{` script to perform the install.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`You can also add additional users to the workshop clusters.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Create a file with one user id per line.\n`}<strong parentName=\"p\">{`IMPORTANT: there needs to be newline after the last entry.`}</strong>{`\nFor example a `}<inlineCode parentName=\"p\">{`users.txt`}</inlineCode>{` file with content.  `}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`additionaluserID\nanotheruserID\nsomeuserID\n\n`}</code></pre>\n            <p parentName=\"li\"><strong parentName=\"p\">{`Note:`}</strong>{` For Openshift clusters on IBM Cloud (ROKS) the user ids are their IBM IDs (email address) all lowercase\nwith an uppercase `}<inlineCode parentName=\"p\">{`IAM#`}</inlineCode>{` prefix added to the beginning. For example.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`IAM#additionaluserid@email.com\nIAM#anotheruserid@email.com\nIAM#someuserid@email.com\n\n`}</code></pre>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Create a `}<inlineCode parentName=\"p\">{`ADDITIONAL_USERS_FILE`}</inlineCode>{` environment variable with the path and name of the file.`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`export ADDITIONAL_USERS_FILE=users.txt\n`}</code></pre>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`The additional users will be granted the `}<inlineCode parentName=\"p\">{`self-provisioner`}</inlineCode>{` role, meaning they can create new Openshift Projects.\nIf you wish to remove this permission set an environment\nvarable `}<inlineCode parentName=\"p\">{`ADDITIONAL_USERS_SELF_PROVISIONER`}</inlineCode>{` with a value of `}<inlineCode parentName=\"p\">{`N`}</inlineCode></p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`export ADDITIONAL_USERS_SELF_PROVISIONER=N\n`}</code></pre>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Once you have finished configuring the additional users, login to the cluster from the cli and run the `}<inlineCode parentName=\"p\">{`scripts/13-ocp-additional-users.sh`}</inlineCode>{` script.`}</p>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import React from 'react';\nimport slugify from 'slugify';\nimport {graphql, useStaticQuery} from 'gatsby';\n\nimport Utils from 'gatsby-theme-carbon/src/components/Utils';\nimport Layout from 'gatsby-theme-carbon/src/components/Layout';\nimport PageHeader from 'gatsby-theme-carbon/src/components/PageHeader';\nimport EditLink from 'gatsby-theme-carbon/src/components/EditLink';\nimport PageTabs from 'gatsby-theme-carbon/src/components/PageTabs';\nimport Main from 'gatsby-theme-carbon/src/components/Main';\nimport useMetadata from 'gatsby-theme-carbon/src/util/hooks/useMetadata';\n\n// Copy of gatsby-theme-carbon/src/templates/Default with the NextPrevious widget removed\n\nconst Default = ({ pageContext, children, location, Title }) => {\n    const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n    const {\n        tabs,\n        title,\n        theme: frontmatterTheme,\n        description,\n        keywords,\n    } = frontmatter;\n\n    const { interiorTheme } = useMetadata();\n\n    // get the path prefix if it exists\n    const {\n        site: { pathPrefix },\n    } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY1 {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n    // let gatsby handle prefixing\n    const slug = pathPrefix\n        ? location.pathname.replace(pathPrefix, '')\n        : location.pathname;\n\n    const getCurrentTab = () => {\n        if (!tabs) return '';\n        return (\n            slug.split('/').filter(Boolean).slice(-1)[0] ||\n            slugify(tabs[0], { lower: true })\n        );\n    };\n\n    const currentTab = getCurrentTab();\n\n    const theme = frontmatterTheme || interiorTheme;\n\n    return (\n        <Layout\n            tabs={tabs}\n            homepage={false}\n            theme={theme}\n            pageTitle={title}\n            pageDescription={description}\n            pageKeywords={keywords}\n            titleType={titleType}>\n            <PageHeader\n                title={Title ? <Title /> : title}\n                label=\"label\"\n                tabs={tabs}\n                theme={theme}\n            />\n            {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n            <Main padded>\n                {children}\n                <EditLink relativePagePath={relativePagePath} />\n            </Main>\n            {/*Remove NextPrevious*/}\n            <Utils />\n        </Layout>\n    );\n};\n\nexport default Default;\n"],"sourceRoot":""}