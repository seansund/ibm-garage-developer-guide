{"version":3,"sources":["webpack:///./src/pages/tools/tools-image/index.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"qQAOaA,G,UAAe,IAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAqBN,EAAc,sBACnCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,eAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAI5E,YAACP,EAAD,CAAiBO,QAAQ,mBACvB,4BAAW,YAAC,IAAD,CAASX,KAAK,MAAMW,QAAQ,YAAvC,yCAEF,4BAAW,6BAAGC,WAAW,KAAQ,CAC7B,KAAQ,2DACR,MAAS,sDAFF,iCAAX,wLAIA,4CACA,YAACP,EAAD,CAAoBM,QAAQ,sBAC1B,iCAAgB,6BAAGC,WAAW,KAAQ,CAClC,KAAQ,mDADI,0BAAhB,sDAIF,oDACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,cAAkC,0BAAYA,WAAW,KAAvB,YAAlC,eACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,kBADI,+DAIrB,iBAAGA,WAAW,MAAd,6CAAiE,0BAAYA,WAAW,KAAvB,wBAAjE,OAGJ,sGACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,cAAkC,0BAAYA,WAAW,KAAvB,YAAlC,mCACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,kBADI,yCAIrB,iBAAGA,WAAW,MAAd,+CAGJ,8FACA,mFACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gBAAoC,0BAAYA,WAAW,KAAvB,YAApC,wCACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,kBADI,WAIrB,iBAAGA,WAAW,MAAd,iEAGJ,6CACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,cAAkC,0BAAYA,WAAW,KAAvB,YAAlC,qBACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,kBADI,8BAMzB,4BAAW,0BAAYA,WAAW,KAAvB,YAAX,iDAAiH,6BAAGA,WAAW,KAAQ,CACnI,KAAQ,8DADqG,uBAAjH,UAGA,0CACA,iDAAgC,0BAAYA,WAAW,KAAvB,cAAhC,mEACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,ygCAwCTH,EAAWI,gBAAiB","file":"component---src-pages-tools-tools-image-index-mdx-83c9dd896accb5ef476e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The `}<Globals name=\"env\" mdxType=\"Globals\" />{` includes the CLI Tools Docker image`}</p>\n    </PageDescription>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ibm-garage-cloud/ibm-garage-cli-tools\",\n        \"title\": \"IBM Garage for Cloud Developer Tools Docker image\"\n      }}>{`IBM Garage command-line tools`}</a>{` is a Docker image with many useful IBM Cloud CLI tools already installed. Rather than installing all of these tools on your local computer, you can simply pull and run this image.`}</p>\n    <h2>{`Running the client`}</h2>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`You must `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.docker.com/products/docker-desktop\"\n        }}>{`install Docker Desktop`}</a>{` on your local computer to run this Docker image.`}</p>\n    </InlineNotification>\n    <p>{`Start the client to use it.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To run the `}<inlineCode parentName=\"p\">{`icclient`}</inlineCode>{` container:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`docker run -itd --name icclient ibmgaragecloud/cli-tools\n`}</code></pre>\n        <p parentName=\"li\">{`  This  assumes the image’s default name, `}<inlineCode parentName=\"p\">{`ibm-garage-cli-tools`}</inlineCode>{`.`}</p>\n      </li>\n    </ul>\n    <p>{`Once the client is running in the backgroud, use it by opening a shell in it.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To use the `}<inlineCode parentName=\"p\">{`icclient`}</inlineCode>{` container, exec shell into it:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`docker exec -it icclient /bin/bash\n`}</code></pre>\n        <p parentName=\"li\">{`  Your terminal is now in the container. `}</p>\n      </li>\n    </ul>\n    <p>{`Use this shell to run commands using the installed tools and scripts.`}</p>\n    <p>{`When you’re finished running commands, to exit the client.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To leave the `}<inlineCode parentName=\"p\">{`icclient`}</inlineCode>{` container shell, as with any shell:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`exit\n`}</code></pre>\n        <p parentName=\"li\">{`  The container will keep running after you exit its shell.`}</p>\n      </li>\n    </ul>\n    <p>{`If the client stops:`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To run the `}<inlineCode parentName=\"p\">{`icclient`}</inlineCode>{` container again:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`docker start icclient\n`}</code></pre>\n      </li>\n    </ul>\n    <p>{`The `}<inlineCode parentName=\"p\">{`icclient`}</inlineCode>{` container is just a Docker container, so all `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.docker.com/engine/reference/commandline/cli/\"\n      }}>{`Docker CLI commands`}</a>{` work.`}</p>\n    <h2>{`Using the client`}</h2>\n    <p>{`From a client shell, run `}<inlineCode parentName=\"p\">{`image-help`}</inlineCode>{` to get a list of available tools, scripts, and ENV properties:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ image-help\nAvailable env properties (can be overridden for individual commands):\n > BM_API_KEY - the IBM Cloud api key\n > REGION - the IBM Cloud region (e.g. us-south)\n > RESOURCE_GROUP - the IBM Cloud resource group\n > CLUSTER_NAME - the name of the kubernetes cluster in IBM Cloud\n > SL_USERNAME - the Classic Infrastructure user name or API user name (e.g. 282165_joe@us.ibm.com)\n > SL_API_KEY - the Classic Infrastructure api key\n\nAvailable tools:\n > terraform (with helm, kube, and ibm provider plugins)\n > calicoctl\n > ibmcloud (with container-service, container-registry, and cloud-databases plugins)\n > kubectl\n > kustomize\n > oc\n > helm\n > docker\n > git\n > nvm\n > node (v11.12.0 currently installed)\n > solsa\n > yo\n\nAvailable scripts:\n > init.sh {BM_API_KEY} {REGION} {RESOURCE_GROUP} {CLUSTER_NAME}\n > createNamespaces.sh\n > deleteNamespace.sh\n > installHelm.sh\n > cluster-pull-secret-apply.sh\n > setup-namespace-pull-secrets.sh\n > checkPodRunning.sh\n > copy-secret-to-namespace.sh\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}