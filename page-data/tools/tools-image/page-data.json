{"componentChunkName":"component---src-pages-tools-tools-image-index-mdx","path":"/tools/tools-image/","result":{"pageContext":{"frontmatter":{"title":"CLI Tools Image"},"relativePagePath":"/tools/tools-image/index.mdx","titleType":"page","MdxNode":{"id":"2111442a-7fcb-5dfa-bc54-39b6c1777e6a","children":[],"parent":"7e357f33-719c-5d3c-aac4-ab914ca352ff","internal":{"content":"---\ntitle: CLI Tools Image\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nThe <Globals name=\"env\" /> includes the CLI Tools Docker image\n\n</PageDescription>\n\nThe [IBM Garage command-line tools](https://github.com/ibm-garage-cloud/ibm-garage-cli-tools \"IBM Garage for Cloud Developer Tools Docker image\") is a Docker image with many useful IBM Cloud CLI tools already installed. Rather than installing all of these tools on your local computer, you can simply pull and run this image.\n\n## Running the client\n\n<InlineNotification>\n\nYou must [install Docker Desktop](https://www.docker.com/products/docker-desktop) on your local computer to run this Docker image.\n\n</InlineNotification>\n\nStart the client to use it.\n\n- To run the `icclient` container:\n\n    ```bash\n    docker run -itd --name icclient ibmgaragecloud/cli-tools\n    ```\n\n    This  assumes the image's default name, `ibm-garage-cli-tools`.\n\nOnce the client is running in the backgroud, use it by opening a shell in it.\n\n- To use the `icclient` container, exec shell into it:\n\n    ```bash\n    docker exec -it icclient /bin/bash\n    ```\n\n    Your terminal is now in the container. \n\nUse this shell to run commands using the installed tools and scripts.\n\nWhen you're finished running commands, to exit the client.\n\n- To leave the `icclient` container shell, as with any shell:\n\n    ```bash\n    exit\n    ```\n\n    The container will keep running after you exit its shell.\n\nIf the client stops:\n\n- To run the `icclient` container again:\n\n    ```bash\n    docker start icclient\n    ```\n\nThe `icclient` container is just a Docker container, so all [Docker CLI commands](https://docs.docker.com/engine/reference/commandline/cli/) work.\n\n## Using the client\n\nFrom a client shell, run `image-help` to get a list of available tools, scripts, and ENV properties:\n \n  ```bash\n  $ image-help\n  Available env properties (can be overridden for individual commands):\n   > BM_API_KEY - the IBM Cloud api key\n   > REGION - the IBM Cloud region (e.g. us-south)\n   > RESOURCE_GROUP - the IBM Cloud resource group\n   > CLUSTER_NAME - the name of the kubernetes cluster in IBM Cloud\n   > SL_USERNAME - the Classic Infrastructure user name or API user name (e.g. 282165_joe@us.ibm.com)\n   > SL_API_KEY - the Classic Infrastructure api key\n\n  Available tools:\n   > terraform (with helm, kube, and ibm provider plugins)\n   > calicoctl\n   > ibmcloud (with container-service, container-registry, and cloud-databases plugins)\n   > kubectl\n   > kustomize\n   > oc\n   > helm\n   > docker\n   > git\n   > nvm\n   > node (v11.12.0 currently installed)\n   > solsa\n   > yo\n\n  Available scripts:\n   > init.sh {BM_API_KEY} {REGION} {RESOURCE_GROUP} {CLUSTER_NAME}\n   > createNamespaces.sh\n   > deleteNamespace.sh\n   > installHelm.sh\n   > cluster-pull-secret-apply.sh\n   > setup-namespace-pull-secrets.sh\n   > checkPodRunning.sh\n   > copy-secret-to-namespace.sh\n   ```\n\n","type":"Mdx","contentDigest":"1b4af0463f8c2289ee2fb11f44d1bf58","counter":1014,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"CLI Tools Image"},"exports":{},"rawBody":"---\ntitle: CLI Tools Image\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nThe <Globals name=\"env\" /> includes the CLI Tools Docker image\n\n</PageDescription>\n\nThe [IBM Garage command-line tools](https://github.com/ibm-garage-cloud/ibm-garage-cli-tools \"IBM Garage for Cloud Developer Tools Docker image\") is a Docker image with many useful IBM Cloud CLI tools already installed. Rather than installing all of these tools on your local computer, you can simply pull and run this image.\n\n## Running the client\n\n<InlineNotification>\n\nYou must [install Docker Desktop](https://www.docker.com/products/docker-desktop) on your local computer to run this Docker image.\n\n</InlineNotification>\n\nStart the client to use it.\n\n- To run the `icclient` container:\n\n    ```bash\n    docker run -itd --name icclient ibmgaragecloud/cli-tools\n    ```\n\n    This  assumes the image's default name, `ibm-garage-cli-tools`.\n\nOnce the client is running in the backgroud, use it by opening a shell in it.\n\n- To use the `icclient` container, exec shell into it:\n\n    ```bash\n    docker exec -it icclient /bin/bash\n    ```\n\n    Your terminal is now in the container. \n\nUse this shell to run commands using the installed tools and scripts.\n\nWhen you're finished running commands, to exit the client.\n\n- To leave the `icclient` container shell, as with any shell:\n\n    ```bash\n    exit\n    ```\n\n    The container will keep running after you exit its shell.\n\nIf the client stops:\n\n- To run the `icclient` container again:\n\n    ```bash\n    docker start icclient\n    ```\n\nThe `icclient` container is just a Docker container, so all [Docker CLI commands](https://docs.docker.com/engine/reference/commandline/cli/) work.\n\n## Using the client\n\nFrom a client shell, run `image-help` to get a list of available tools, scripts, and ENV properties:\n \n  ```bash\n  $ image-help\n  Available env properties (can be overridden for individual commands):\n   > BM_API_KEY - the IBM Cloud api key\n   > REGION - the IBM Cloud region (e.g. us-south)\n   > RESOURCE_GROUP - the IBM Cloud resource group\n   > CLUSTER_NAME - the name of the kubernetes cluster in IBM Cloud\n   > SL_USERNAME - the Classic Infrastructure user name or API user name (e.g. 282165_joe@us.ibm.com)\n   > SL_API_KEY - the Classic Infrastructure api key\n\n  Available tools:\n   > terraform (with helm, kube, and ibm provider plugins)\n   > calicoctl\n   > ibmcloud (with container-service, container-registry, and cloud-databases plugins)\n   > kubectl\n   > kustomize\n   > oc\n   > helm\n   > docker\n   > git\n   > nvm\n   > node (v11.12.0 currently installed)\n   > solsa\n   > yo\n\n  Available scripts:\n   > init.sh {BM_API_KEY} {REGION} {RESOURCE_GROUP} {CLUSTER_NAME}\n   > createNamespaces.sh\n   > deleteNamespace.sh\n   > installHelm.sh\n   > cluster-pull-secret-apply.sh\n   > setup-namespace-pull-secrets.sh\n   > checkPodRunning.sh\n   > copy-secret-to-namespace.sh\n   ```\n\n","fileAbsolutePath":"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/src/pages/tools/tools-image/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","3273249464","63531786","63531786","768070550"]}