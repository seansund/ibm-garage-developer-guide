{"componentChunkName":"component---src-pages-arch-application-index-mdx","path":"/arch/application/","result":{"pageContext":{"frontmatter":{"title":"Application Architecture"},"relativePagePath":"/arch/application/index.mdx","titleType":"page","MdxNode":{"id":"387beb8c-a005-5417-acd6-e5de717ed7de","children":[],"parent":"b6b069f6-cd0a-5364-a08c-3d061b21e8c5","internal":{"content":"---\ntitle: Application Architecture\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nThe environment supports a cloud-native architecture for applications\n\n</PageDescription>\n\nThe <Globals name=\"env\" /> is designed to support best practices for developing cloud-native applications, and as such assumes a typical application architecture:\n- **Microservices architecture**: The application is composed of a set of coordinating microservices that are each developed by a separate team and deployed to run in separate processes\n- **Stateless services**: The application processes (typically microservices) are stateless, so state is stored in externally in backend services that host databases and storage\n- **RESTful APIs**: Clients access the application processes via REST endpoints\n- [**Built to manage**](/arch/manageable): The application components are designed to expose their status and metrics so that backend services for monitoring and logging can be used to manage them\n\nAn easy way to get started with this architecture is by using one of the [<Globals name=\"templates\" />](/codepatterns/overview) to create the skeleton for each microservice.\n","type":"Mdx","contentDigest":"e7338f0f5ed586e1bee66134f5db7504","counter":504,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Application Architecture"},"exports":{},"rawBody":"---\ntitle: Application Architecture\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nThe environment supports a cloud-native architecture for applications\n\n</PageDescription>\n\nThe <Globals name=\"env\" /> is designed to support best practices for developing cloud-native applications, and as such assumes a typical application architecture:\n- **Microservices architecture**: The application is composed of a set of coordinating microservices that are each developed by a separate team and deployed to run in separate processes\n- **Stateless services**: The application processes (typically microservices) are stateless, so state is stored in externally in backend services that host databases and storage\n- **RESTful APIs**: Clients access the application processes via REST endpoints\n- [**Built to manage**](/arch/manageable): The application components are designed to expose their status and metrics so that backend services for monitoring and logging can be used to manage them\n\nAn easy way to get started with this architecture is by using one of the [<Globals name=\"templates\" />](/codepatterns/overview) to create the skeleton for each microservice.\n","fileAbsolutePath":"/home/travis/build/ibm-garage-cloud/ibm-garage-developer-guide/src/pages/arch/application/index.mdx"}}}}