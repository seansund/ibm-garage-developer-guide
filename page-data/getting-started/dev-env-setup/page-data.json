{"componentChunkName":"component---src-pages-getting-started-dev-env-setup-index-mdx","path":"/getting-started/dev-env-setup/","result":{"pageContext":{"frontmatter":{"title":"Developer Tools Setup"},"relativePagePath":"/getting-started/dev-env-setup/index.mdx","titleType":"page","MdxNode":{"id":"d663a2d6-e429-5657-9bd7-e0cd4d40b515","children":[],"parent":"eaa458a8-d75e-5801-9c47-b3cc92c03d2c","internal":{"content":"---\ntitle: Developer Tools Setup\n---\n\nTo enable the best working experience through the hands-on exercises, you\nneed to select the environment you plan to use for development and the required tools for integration with IBM Cloud.\n\n- If you plan to use your desktop/laptop for hands-on exercises, follow\n the instructions in the Desktop/Laptop tab. You will need a recent macOS or\n  Windows 10 operating system for this option.\n- If you cannot install tools on your desktop/laptop, follow the Cloud Shell\n instructions.\n\nOnce you have fulfilled these setup requirements you will be ready to\ngo through the **Getting Started** steps.\n\n<Tabs>\n\n<Tab label=\"Cloud Shell\">\n\n## Introduction to Cloud Shell\n\nIBM Cloud Shell is a free service that gives you complete control of your cloud resources, applications, and \ninfrastructure, from any web browser. It's instantly accessible from your free IBM Cloud account--no other installation \nis needed.\n\nFeatures of IBM Cloud Shell include:\n\n- Preconfigured environment: IBM Cloud Shell provides a curated, cloud-based workspace with dozens of preinstalled tools \n  and programming languages. It's automatically authenticated with your IBM Cloud account so you can start to develop \n  immediately.\n\n- File upload/download: use this feature to import files to IBM Cloud Shell or pull-down data to your local machine.\n\n- Multiple sessions: use up to five shell sessions at a time to maximize your productivity. Mirror workflows on your \n  local machine, or view logs on one session while editing a file in another.\n\n### Accessing the Cloud Shell\n\n- Open the IBM Cloud console (cloud.ibm.com) in your browser and log in if needed.\n\n- Invoke Cloud Shell by clicking on the button at the top, right-hand corner of the browser window.\n    ![Invoke Cloud Shell](./images/invokecloudshell.png)\n\n</Tab>\n\n<Tab label=\"Desktop/Laptop\">\n\n## Additional tools installation\n\nThere are some tools that are assumed to already be available within the shell environment. \n\n### Docker client\n\n[Docker Desktop](https://www.docker.com/products/docker-desktop) is required for working with container images locally,\nrunning common tools and using the [Developer Tools Image](https://ibm-garage-cloud.github.io/ibm-garage-developer-guide/guides/tools-image).\n\n### Git client\n\nThe [Git Client](https://git-scm.com/) needs to be installed in your development operating system to work with Git \nrepositories locally. It comes as standard for Mac OS.\n\n### Code editor/IDE\n\nYou will be viewing and updating code artifacts. It is important to have a good code editor to make the process easier.\nIf you don't already have an IDE available, [Visual Studio Code](https://code.visualstudio.com/download) is a popular \n(and free) code editor to use. \n\nYou can also enable [launching VSCode from a terminal](https://code.visualstudio.com/docs/setup/mac#_launching-from-the-command-line) to\nmake it easier to transition from the terminal to the IDE.\n\n</Tab>\n\n</Tabs>\n\n### Set up the shell environment\n\nWe have provided a simplified installer that will install tools and configure the shell environment. The\ninstaller will first check if the required tool is available in the path. If not, the missing tool(s) will be\ninstalled into the `bin/` folder of the current user's home directory and the `PATH` variable will be updated in the\n`.bashrc` or `.zshrc` file to include that directory.\n\nThe following tools are included in the shell installer:\n\n- IBM Cloud cli (ibmcloud)\n- ArgoCD cli (argocd)\n- Tekton cli (tkn)\n- IBM Cloud fast switching (icc)\n- kube-ps1 prompt\n- OpenShift cli (oc)\n- Kubernetes cli (kubectl)\n- JSON cli (jq)\n- IBM Garage Cloud CLI (igc)\n\n1. Set up the shell environment by running:\n    ```shell\n    curl -sL shell.cloudnativetoolkit.dev | sh - && . ~/.bashrc\n    ```\n\n2. If successful, you should see something like the following:\n    ```shell\n    Downloading scripts: https://github.com/ibm-garage-cloud/cloud-shell-commands/releases/download/0.3.5/assets.tar.gz\n    ** Installing argocd cli\n    ** Installing tkn cli\n    ** Installing kube-ps1\n    ** Installing icc\n    ** Installing Cloud-Native Toolkit cli\n    ```\n\n3. You can check the shell was installed correctly by checking the `oc` version:\n    ```shell\n    oc sync --version\n    ```\n\n### Configure git\n\n- Execute the following commands replacing the email and short name:\n\n    ```shell\n    $ git config --global user.email \"<email>\"\n    $ git config --global user.name \"<short_name>\"\n    ```\n\n### Configure IBM Cloud cluster fast-switching (icc)\n\nIf you will be working with clusters and services hosted on IBM Cloud, it is highly recommended to use the provided `icc`\ncommand to simplify the process of switching between clusters.\n\n1. Get your IBM Cloud API Key for the account. If you don't have one then [create an API Key](https://cloud.ibm.com/docs/iam?topic=iam-userapikey#create_user_key)\n2. Configure the `icc` command with your API Key with `icc --add-account`\n3. Get the cluster metadata for the account by running `icc --generate`\n4. List the available clusters with `icc`\n5. Optionally, give a short nickname for your cluster by running `icc --nickname`\n\nYou can now log in to a cluster by running `icc [cluster name|cluster nickname]`\n\n<InlineNotification>\n\nIf you have multiple accounts, the `icc --add-account` can be run multiple times to add the different API Keys. Also,\n`icc --generate` can be run multiple times to refresh the list of available clusters. Any nicknames that have been added\nwill be preserved.\n\n</InlineNotification>\n","type":"Mdx","contentDigest":"c792b1cdefe38db1e3a528112d74cb49","counter":935,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Developer Tools Setup"},"exports":{},"rawBody":"---\ntitle: Developer Tools Setup\n---\n\nTo enable the best working experience through the hands-on exercises, you\nneed to select the environment you plan to use for development and the required tools for integration with IBM Cloud.\n\n- If you plan to use your desktop/laptop for hands-on exercises, follow\n the instructions in the Desktop/Laptop tab. You will need a recent macOS or\n  Windows 10 operating system for this option.\n- If you cannot install tools on your desktop/laptop, follow the Cloud Shell\n instructions.\n\nOnce you have fulfilled these setup requirements you will be ready to\ngo through the **Getting Started** steps.\n\n<Tabs>\n\n<Tab label=\"Cloud Shell\">\n\n## Introduction to Cloud Shell\n\nIBM Cloud Shell is a free service that gives you complete control of your cloud resources, applications, and \ninfrastructure, from any web browser. It's instantly accessible from your free IBM Cloud account--no other installation \nis needed.\n\nFeatures of IBM Cloud Shell include:\n\n- Preconfigured environment: IBM Cloud Shell provides a curated, cloud-based workspace with dozens of preinstalled tools \n  and programming languages. It's automatically authenticated with your IBM Cloud account so you can start to develop \n  immediately.\n\n- File upload/download: use this feature to import files to IBM Cloud Shell or pull-down data to your local machine.\n\n- Multiple sessions: use up to five shell sessions at a time to maximize your productivity. Mirror workflows on your \n  local machine, or view logs on one session while editing a file in another.\n\n### Accessing the Cloud Shell\n\n- Open the IBM Cloud console (cloud.ibm.com) in your browser and log in if needed.\n\n- Invoke Cloud Shell by clicking on the button at the top, right-hand corner of the browser window.\n    ![Invoke Cloud Shell](./images/invokecloudshell.png)\n\n</Tab>\n\n<Tab label=\"Desktop/Laptop\">\n\n## Additional tools installation\n\nThere are some tools that are assumed to already be available within the shell environment. \n\n### Docker client\n\n[Docker Desktop](https://www.docker.com/products/docker-desktop) is required for working with container images locally,\nrunning common tools and using the [Developer Tools Image](https://ibm-garage-cloud.github.io/ibm-garage-developer-guide/guides/tools-image).\n\n### Git client\n\nThe [Git Client](https://git-scm.com/) needs to be installed in your development operating system to work with Git \nrepositories locally. It comes as standard for Mac OS.\n\n### Code editor/IDE\n\nYou will be viewing and updating code artifacts. It is important to have a good code editor to make the process easier.\nIf you don't already have an IDE available, [Visual Studio Code](https://code.visualstudio.com/download) is a popular \n(and free) code editor to use. \n\nYou can also enable [launching VSCode from a terminal](https://code.visualstudio.com/docs/setup/mac#_launching-from-the-command-line) to\nmake it easier to transition from the terminal to the IDE.\n\n</Tab>\n\n</Tabs>\n\n### Set up the shell environment\n\nWe have provided a simplified installer that will install tools and configure the shell environment. The\ninstaller will first check if the required tool is available in the path. If not, the missing tool(s) will be\ninstalled into the `bin/` folder of the current user's home directory and the `PATH` variable will be updated in the\n`.bashrc` or `.zshrc` file to include that directory.\n\nThe following tools are included in the shell installer:\n\n- IBM Cloud cli (ibmcloud)\n- ArgoCD cli (argocd)\n- Tekton cli (tkn)\n- IBM Cloud fast switching (icc)\n- kube-ps1 prompt\n- OpenShift cli (oc)\n- Kubernetes cli (kubectl)\n- JSON cli (jq)\n- IBM Garage Cloud CLI (igc)\n\n1. Set up the shell environment by running:\n    ```shell\n    curl -sL shell.cloudnativetoolkit.dev | sh - && . ~/.bashrc\n    ```\n\n2. If successful, you should see something like the following:\n    ```shell\n    Downloading scripts: https://github.com/ibm-garage-cloud/cloud-shell-commands/releases/download/0.3.5/assets.tar.gz\n    ** Installing argocd cli\n    ** Installing tkn cli\n    ** Installing kube-ps1\n    ** Installing icc\n    ** Installing Cloud-Native Toolkit cli\n    ```\n\n3. You can check the shell was installed correctly by checking the `oc` version:\n    ```shell\n    oc sync --version\n    ```\n\n### Configure git\n\n- Execute the following commands replacing the email and short name:\n\n    ```shell\n    $ git config --global user.email \"<email>\"\n    $ git config --global user.name \"<short_name>\"\n    ```\n\n### Configure IBM Cloud cluster fast-switching (icc)\n\nIf you will be working with clusters and services hosted on IBM Cloud, it is highly recommended to use the provided `icc`\ncommand to simplify the process of switching between clusters.\n\n1. Get your IBM Cloud API Key for the account. If you don't have one then [create an API Key](https://cloud.ibm.com/docs/iam?topic=iam-userapikey#create_user_key)\n2. Configure the `icc` command with your API Key with `icc --add-account`\n3. Get the cluster metadata for the account by running `icc --generate`\n4. List the available clusters with `icc`\n5. Optionally, give a short nickname for your cluster by running `icc --nickname`\n\nYou can now log in to a cluster by running `icc [cluster name|cluster nickname]`\n\n<InlineNotification>\n\nIf you have multiple accounts, the `icc --add-account` can be run multiple times to add the different API Keys. Also,\n`icc --generate` can be run multiple times to refresh the list of available clusters. Any nicknames that have been added\nwill be preserved.\n\n</InlineNotification>\n","fileAbsolutePath":"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/src/pages/getting-started/dev-env-setup/index.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","3273249464","768070550"]}