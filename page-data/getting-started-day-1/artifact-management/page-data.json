{"componentChunkName":"component---src-pages-getting-started-day-1-artifact-management-index-mdx","path":"/getting-started-day-1/artifact-management/","result":{"pageContext":{"frontmatter":{"title":"Artifact management"},"relativePagePath":"/getting-started-day-1/artifact-management/index.mdx","titleType":"page","MdxNode":{"id":"e0517e83-094c-59ec-91dc-74a9f746b40c","children":[],"parent":"d4ebbc7f-8bc9-555a-a5e5-743900852f7f","internal":{"content":"---\ntitle: Artifact management\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\nIn the DevOps process, Artifact Management generally refers to the activities around storing and managing assets that are\nproduced during the continuous integration process. Depending upon the development language, an \"asset\" could be any number\nof things:\n\n- Library jar file\n- NPM package\n- Helm chart\n- etc\n\nBesides the contents of the asset, many of those types of artifacts also involve a particular protocol for how they are shared\nand consumed (e.g. maven repository for jar libraries).\n\n<InlineNotification>\n\n**Note:** While container images are closely related to the other artifacts listed above, we feel the practices and tools\naround managing images is distinct enough that the [Image Registry](/getting-started-day-1/image-registry) warrents its own\ntreatment.  \n\n</InlineNotification>\n\nThere are a number of tools available to handle manage artifacts, from roll-your-own file systems to enterprise-grade\nsoftware. Currently the <Globals name=\"shortName\" /> supports provisioning the following Artifact Management tools:\n\n- [Artifactory](/tools/artifactory)\n- Nexus\n","type":"Mdx","contentDigest":"c7c27051fb9edf7b86f8741138bef9c1","counter":1004,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Artifact management"},"exports":{},"rawBody":"---\ntitle: Artifact management\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\nIn the DevOps process, Artifact Management generally refers to the activities around storing and managing assets that are\nproduced during the continuous integration process. Depending upon the development language, an \"asset\" could be any number\nof things:\n\n- Library jar file\n- NPM package\n- Helm chart\n- etc\n\nBesides the contents of the asset, many of those types of artifacts also involve a particular protocol for how they are shared\nand consumed (e.g. maven repository for jar libraries).\n\n<InlineNotification>\n\n**Note:** While container images are closely related to the other artifacts listed above, we feel the practices and tools\naround managing images is distinct enough that the [Image Registry](/getting-started-day-1/image-registry) warrents its own\ntreatment.  \n\n</InlineNotification>\n\nThere are a number of tools available to handle manage artifacts, from roll-your-own file systems to enterprise-grade\nsoftware. Currently the <Globals name=\"shortName\" /> supports provisioning the following Artifact Management tools:\n\n- [Artifactory](/tools/artifactory)\n- Nexus\n","fileAbsolutePath":"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/src/pages/getting-started-day-1/artifact-management/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","3273249464","63531786","63531786","768070550"]}