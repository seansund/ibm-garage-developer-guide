{"componentChunkName":"component---src-pages-getting-started-day-0-install-toolkit-private-catalog-mdx","path":"/getting-started-day-0/install-toolkit/private-catalog/","result":{"pageContext":{"frontmatter":{"title":"Install the Toolkit using a Private Catalog","tabs":["Quick Install","Private Catalog","Iteration Zero"]},"relativePagePath":"/getting-started-day-0/install-toolkit/private-catalog.mdx","titleType":"page","MdxNode":{"id":"40acf045-9981-5670-9421-0f64c330fa81","children":[],"parent":"d92bdaa5-8e5c-5a04-bd50-85e5a162a36e","internal":{"content":"---\ntitle: Install the Toolkit using a Private Catalog\ntabs: ['Quick Install', 'Private Catalog', 'Iteration Zero']\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nOne of the features of the IBM Cloud Catalog is support for private catalog tiles. These can\ncontain custom Terraform definitions that can accelerate SRE teams in the execution of common\nand repetitive tasks. The <Globals name=\"shortName\" /> tools installation can be configured as\na private catalog tile. This is the recommended approach for using this asset multiple times.\nThis asset enables the easy transition of a default cluster into a cluster that supports\nCloud-Native CI/CD development tools.\n\n</PageDescription>\n\n<InlineNotification kind=\"warning\">\nThis installation method will only work on IBM Cloud. Use Iteration Zero for others.\n</InlineNotification>\n\n### A. Create the catalog\n\n<br></br>\n\n1. Log in to the <Globals name=\"ic\" /> Console\n2. Click **Manage->Catalogs** from the top menu\n3. Click on **Create Catalog**\n4. In the `Create a catalog` dialog, provide the following values:\n    - **name:** the name of the catalog, for example `Team Catalog`\n    - **description:** (optional) a brief description of the purpose of the catalog\n    - **products:** select **Start with no products**\n    - **resource group:** click **Update** to change the default resource group for the catalog\n5. Click **Create** to complete the catalog creation\n\n### B. Register the <Globals name=\"shortName\" /> tiles in the catalog\n\n<br></br>\n\n<InlineNotification>\n\n**Note:** The following instructions depend on the `jq` command. The information for installing\n`jq` can be found on the [<Globals name=\"shortName\" /> prerequisites](/getting-started/prereqs) page\n\n</InlineNotification>\n\n<br />\n\n1. Download `create-catalog-offering.sh` from the <a href=\"https://github.com/ibm-garage-cloud/ibm-garage-iteration-zero/releases/latest\" target=\"_blank\">latest Iteration Zero release</a> and make the file executable\n    ```shell script\n    LATEST_RELEASE=$(curl -sL https://api.github.com/repos/ibm-garage-cloud/ibm-garage-iteration-zero/releases/latest | jq -r '.tag_name')\n    curl -OL \"https://github.com/ibm-garage-cloud/ibm-garage-iteration-zero/releases/download/${LATEST_RELEASE}/create-catalog-offering.sh\"\n    chmod +x create-catalog-offering.sh\n    ```\n\n2. Run the `create-catalog-offering.sh` scripts passing in the API Key and the name of the catalog that you created\n    ```shell script\n    ./create-catalog-offering.sh {API_KEY} \"Team Catalog\"\n    ```\n\n### C. Apply the tile\n\n<br />\n\nOnce the tile has been installed it can be used repeatedly to set up clusters with\nthe CNCF tools. Each time the tile is applied, a set of configuration variables are\nrequired.\n\n1. Log in to the <Globals name=\"ic\" /> Console.\n2. Select **Catalog** from the top menu.\n3. From the side menu, select your catalog from the drop-down list (e.g. `Team Catalog`). (**IBM Cloud catalog** should be selected initially.)\n4. Click **Private** on the side menu to see the private catalog entries\n5. Click on the **Cloud-Native Toolkit** tile\n6. Enter values for the variables list provided.\n\n    | **Variable**          | **Description**                                                                               | **eg. Value**                 |\n    |-----------------------|-----------------------------------------------------------------------------------------------|-------------------------------|\n    | `ibmcloud_api_key`    | The API key from IBM Cloud Console that has ClusterAdmin access and supports service creation | `{guid API key from Console}` |\n    | `resource_group_name` | Existing resource group in the account where the cluster has been created                     | `dev-team-one`                |\n    | `region`              | The region where the cluster has been provisioned                                             | `us-east`, `eu-gb`, etc       |\n    | `cluster_exists`      | Flag indicating if the cluster already exists. (`false` means the cluster should be provisioned) | `true` or `false`          |\n    | `vpc_cluster`         | Flag indicating that the cluster has been built on VPC infrastructure                         | `true` or `false`             |\n    | `vpc_zone_names`      | A comma-separated list of the VPC zones that should be used for worker nodes. This value is requored if `cluster_exists` is set to `false` and `vpc_cluster` is set to `true` | `us-south-1` or `us-east-1,us-east-2` |\n    | `cluster_name`        | The name of the cluster (If `cluster_exists` is set to `true` then this name should match an existing cluster) | `dev-team-one-iks-117-vpc` |\n    | `cluster_type`        | The type of cluster into which the toolkit will be installed                                  | `kubernetes`, `ocp3`, `ocp4` or `ocp44` |\n    | `registry_namespace`  | The namespace that should be used in the IBM Container Registry. If not provided the value will default to the resource group name | `dev-team-one-registry-2020` |\n    | `provision_logdna`    | Flag indicating that a new instance of LogDNA should be provisioned                           | `true` or `false`          |\n    | `logdna_name`         | The name of the LogDNA instance (If `provision_logdna` is set to `false` this value is used by the scripts to bind the existing LogDNA instance to the cluster) | `cntk-showcase-logdna` |\n    | `provision_sysdig`    | Flag indicating that a new instance of Sysdig should be provisioned                           | `true` or `false`          |\n    | `sysdig_name`         | The name of the Sysdig instance (If `provision_sysdig` is set to `false` this value is used by the scripts to bind the existing Sysdig instance to the cluster) | `cntk-showcase-sysdig` |\n\n    <InlineNotification>\n\n    **Note:** Provisioning a new cluster using classic infrastructure is not supported with the tile install. In this case\n    you are recommended to either create the cluster using the <Globals name=\"ic\" /> Console then use the tile\n    to install the Toolkit **OR** to install with one of the other methods.\n\n    </InlineNotification>\n\n<br />\n\n\n7. Check the box to accept the **Apache 2** license for the tile.\n8. Click **Install** to start the install process\n\nThis will kick off the installation of the <Globals name=\"shortName\" /> using an\nIBM Cloud Private Catalog Tile. The progress can be reviewed from the\n**Schematics** entry\n\n## Post-installation steps\n\nOnce the Terraform has completed, walk through the [post installation steps](/getting-started-day-0/post-installation) to\nexplore and verify the environment.\n\n## Troubleshooting\n\nIf you find that the Terraform provisioning has failed, for Private Catalog delete the workspace and for Iteration Zero  try re-running the `runTerraform.sh` script again.\nThe state will be saved and Terraform will try and apply the configuration to match the desired end state.\n\nIf you find that some of the services have failed to create in the time allocated, try the following with Iteration zero:\n\n1. Manually delete the service instances in your resource group\n3. Re-run the `runTerraform.sh` script with the `--delete` argument to clean up the state\n    ```shell script\n    ./runTerraform.sh --delete\n    ```\n","type":"Mdx","contentDigest":"504e4ba0bd0a24812881d4077d7aa20b","counter":944,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Install the Toolkit using a Private Catalog","tabs":["Quick Install","Private Catalog","Iteration Zero"]},"exports":{},"rawBody":"---\ntitle: Install the Toolkit using a Private Catalog\ntabs: ['Quick Install', 'Private Catalog', 'Iteration Zero']\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nOne of the features of the IBM Cloud Catalog is support for private catalog tiles. These can\ncontain custom Terraform definitions that can accelerate SRE teams in the execution of common\nand repetitive tasks. The <Globals name=\"shortName\" /> tools installation can be configured as\na private catalog tile. This is the recommended approach for using this asset multiple times.\nThis asset enables the easy transition of a default cluster into a cluster that supports\nCloud-Native CI/CD development tools.\n\n</PageDescription>\n\n<InlineNotification kind=\"warning\">\nThis installation method will only work on IBM Cloud. Use Iteration Zero for others.\n</InlineNotification>\n\n### A. Create the catalog\n\n<br></br>\n\n1. Log in to the <Globals name=\"ic\" /> Console\n2. Click **Manage->Catalogs** from the top menu\n3. Click on **Create Catalog**\n4. In the `Create a catalog` dialog, provide the following values:\n    - **name:** the name of the catalog, for example `Team Catalog`\n    - **description:** (optional) a brief description of the purpose of the catalog\n    - **products:** select **Start with no products**\n    - **resource group:** click **Update** to change the default resource group for the catalog\n5. Click **Create** to complete the catalog creation\n\n### B. Register the <Globals name=\"shortName\" /> tiles in the catalog\n\n<br></br>\n\n<InlineNotification>\n\n**Note:** The following instructions depend on the `jq` command. The information for installing\n`jq` can be found on the [<Globals name=\"shortName\" /> prerequisites](/getting-started/prereqs) page\n\n</InlineNotification>\n\n<br />\n\n1. Download `create-catalog-offering.sh` from the <a href=\"https://github.com/ibm-garage-cloud/ibm-garage-iteration-zero/releases/latest\" target=\"_blank\">latest Iteration Zero release</a> and make the file executable\n    ```shell script\n    LATEST_RELEASE=$(curl -sL https://api.github.com/repos/ibm-garage-cloud/ibm-garage-iteration-zero/releases/latest | jq -r '.tag_name')\n    curl -OL \"https://github.com/ibm-garage-cloud/ibm-garage-iteration-zero/releases/download/${LATEST_RELEASE}/create-catalog-offering.sh\"\n    chmod +x create-catalog-offering.sh\n    ```\n\n2. Run the `create-catalog-offering.sh` scripts passing in the API Key and the name of the catalog that you created\n    ```shell script\n    ./create-catalog-offering.sh {API_KEY} \"Team Catalog\"\n    ```\n\n### C. Apply the tile\n\n<br />\n\nOnce the tile has been installed it can be used repeatedly to set up clusters with\nthe CNCF tools. Each time the tile is applied, a set of configuration variables are\nrequired.\n\n1. Log in to the <Globals name=\"ic\" /> Console.\n2. Select **Catalog** from the top menu.\n3. From the side menu, select your catalog from the drop-down list (e.g. `Team Catalog`). (**IBM Cloud catalog** should be selected initially.)\n4. Click **Private** on the side menu to see the private catalog entries\n5. Click on the **Cloud-Native Toolkit** tile\n6. Enter values for the variables list provided.\n\n    | **Variable**          | **Description**                                                                               | **eg. Value**                 |\n    |-----------------------|-----------------------------------------------------------------------------------------------|-------------------------------|\n    | `ibmcloud_api_key`    | The API key from IBM Cloud Console that has ClusterAdmin access and supports service creation | `{guid API key from Console}` |\n    | `resource_group_name` | Existing resource group in the account where the cluster has been created                     | `dev-team-one`                |\n    | `region`              | The region where the cluster has been provisioned                                             | `us-east`, `eu-gb`, etc       |\n    | `cluster_exists`      | Flag indicating if the cluster already exists. (`false` means the cluster should be provisioned) | `true` or `false`          |\n    | `vpc_cluster`         | Flag indicating that the cluster has been built on VPC infrastructure                         | `true` or `false`             |\n    | `vpc_zone_names`      | A comma-separated list of the VPC zones that should be used for worker nodes. This value is requored if `cluster_exists` is set to `false` and `vpc_cluster` is set to `true` | `us-south-1` or `us-east-1,us-east-2` |\n    | `cluster_name`        | The name of the cluster (If `cluster_exists` is set to `true` then this name should match an existing cluster) | `dev-team-one-iks-117-vpc` |\n    | `cluster_type`        | The type of cluster into which the toolkit will be installed                                  | `kubernetes`, `ocp3`, `ocp4` or `ocp44` |\n    | `registry_namespace`  | The namespace that should be used in the IBM Container Registry. If not provided the value will default to the resource group name | `dev-team-one-registry-2020` |\n    | `provision_logdna`    | Flag indicating that a new instance of LogDNA should be provisioned                           | `true` or `false`          |\n    | `logdna_name`         | The name of the LogDNA instance (If `provision_logdna` is set to `false` this value is used by the scripts to bind the existing LogDNA instance to the cluster) | `cntk-showcase-logdna` |\n    | `provision_sysdig`    | Flag indicating that a new instance of Sysdig should be provisioned                           | `true` or `false`          |\n    | `sysdig_name`         | The name of the Sysdig instance (If `provision_sysdig` is set to `false` this value is used by the scripts to bind the existing Sysdig instance to the cluster) | `cntk-showcase-sysdig` |\n\n    <InlineNotification>\n\n    **Note:** Provisioning a new cluster using classic infrastructure is not supported with the tile install. In this case\n    you are recommended to either create the cluster using the <Globals name=\"ic\" /> Console then use the tile\n    to install the Toolkit **OR** to install with one of the other methods.\n\n    </InlineNotification>\n\n<br />\n\n\n7. Check the box to accept the **Apache 2** license for the tile.\n8. Click **Install** to start the install process\n\nThis will kick off the installation of the <Globals name=\"shortName\" /> using an\nIBM Cloud Private Catalog Tile. The progress can be reviewed from the\n**Schematics** entry\n\n## Post-installation steps\n\nOnce the Terraform has completed, walk through the [post installation steps](/getting-started-day-0/post-installation) to\nexplore and verify the environment.\n\n## Troubleshooting\n\nIf you find that the Terraform provisioning has failed, for Private Catalog delete the workspace and for Iteration Zero  try re-running the `runTerraform.sh` script again.\nThe state will be saved and Terraform will try and apply the configuration to match the desired end state.\n\nIf you find that some of the services have failed to create in the time allocated, try the following with Iteration zero:\n\n1. Manually delete the service instances in your resource group\n3. Re-run the `runTerraform.sh` script with the `--delete` argument to clean up the state\n    ```shell script\n    ./runTerraform.sh --delete\n    ```\n","fileAbsolutePath":"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/src/pages/getting-started-day-0/install-toolkit/private-catalog.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","3273249464","768070550"]}