{"componentChunkName":"component---src-pages-getting-started-day-0-git-ops-index-mdx","path":"/getting-started-day-0/git-ops/","result":{"pageContext":{"frontmatter":{"title":"Git-Ops"},"relativePagePath":"/getting-started-day-0/git-ops/index.mdx","titleType":"page","MdxNode":{"id":"8faf9700-be7b-57d3-8e2d-f28a5a15fe06","children":[],"parent":"7bf6a7ff-dbf0-5b47-ba59-fab3281f2dcf","internal":{"content":"---\ntitle: Git-Ops\n---\n\n[*GitOps*](https://www.weave.works/technologies/gitops/) is the operational pattern of using source code repositories \n(namely Git) as the source of truth for defining the configuration that makes up the desired state of the operational \nenvironment. Git repositories are used to declaratively represent the desired state of applications in deployment \nenvironments.\n\nGitOps takes advantage of several Git features:\n- Git provides a versioned history of changes, listing what was changed and who made the change\n- Change releases can be managed from a pull request, allowing multiple people to make changes but a select few to approve the changes\n- Git provides access control mechanisms to limit who can change and view the configuration\n- Git enables changes to be rolled back quickly if there is an issue with a new release\n- Git supports multiple models for change management: Branches, Forks, GitFlow, etc\n- Hosted git providers (like GitHub) provide a rich API that allows the different operations to be automated, if desired\n","type":"Mdx","contentDigest":"32a21ba729b0b91ac8bed20dace9e4e6","counter":938,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Git-Ops"},"exports":{},"rawBody":"---\ntitle: Git-Ops\n---\n\n[*GitOps*](https://www.weave.works/technologies/gitops/) is the operational pattern of using source code repositories \n(namely Git) as the source of truth for defining the configuration that makes up the desired state of the operational \nenvironment. Git repositories are used to declaratively represent the desired state of applications in deployment \nenvironments.\n\nGitOps takes advantage of several Git features:\n- Git provides a versioned history of changes, listing what was changed and who made the change\n- Change releases can be managed from a pull request, allowing multiple people to make changes but a select few to approve the changes\n- Git provides access control mechanisms to limit who can change and view the configuration\n- Git enables changes to be rolled back quickly if there is an issue with a new release\n- Git supports multiple models for change management: Branches, Forks, GitFlow, etc\n- Hosted git providers (like GitHub) provide a rich API that allows the different operations to be automated, if desired\n","fileAbsolutePath":"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/src/pages/getting-started-day-0/git-ops/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","3273249464","63531786","63531786","768070550"]}