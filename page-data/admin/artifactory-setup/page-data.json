{"componentChunkName":"component---src-pages-admin-artifactory-setup-index-mdx","path":"/admin/artifactory-setup/","result":{"pageContext":{"frontmatter":{"title":"Artifactory Setup"},"relativePagePath":"/admin/artifactory-setup/index.mdx","titleType":"page","MdxNode":{"id":"29b67ed4-913d-529a-a05a-0ff058bf2bad","children":[],"parent":"9c805b37-56f7-5732-8cb8-4ad484a9b1d4","internal":{"content":"---\ntitle: Artifactory Setup\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nComplete the steps for setting up the Artifactory tool\n\n</PageDescription>\n\n\n<InlineNotification>\n\n**Note**: As of v1.9.0 of the Artifactory module, these steps have been automated and should not be required after a <Globals name=\"tinyName\" /> install. The\ninstructions are provided here to understand what steps are required to manually integrate the Artifactory instance into the pipelines.\n\n</InlineNotification>\n\n\n## Overview\n\nArtifactory is the [<Globals name=\"env\" />'s artifact repository manager](/tools/artifact-management).\nBefore you can use it as part of the [continuous integration pipeline](/tools/continuous-integration),\nit first must be configured as part of the environment.\n\n##  Configuration\n\nSet up Artifactory in the <Globals name=\"env\" /> with a Helm repository.\nAlso, set up the <Globals name=\"env\" /> to access Artifactory.\n\n<InlineNotification kind=\"warning\">\n\n**Warning:** The version of Artifactory that is installed into the cluster is\n not configured for high availability. It is limited to the\n  storage size of your cluster. It is highly recommended you integrate your\n   pipelines with an enterprise grade Helm repository or artifact\n    management\n    system.  \n     \n</InlineNotification>\n\n### Set up Artifactory\n\nCreate a repository in Artifactory for storing Helm charts.\n\n- Open the Artifactory dashboard from the [<Globals name=\"dashboard\" />](/getting-started/dashboard) and login\n\n- Log into Artifactory using the default userid and password, `igc credentials` can show these values. The first time\nyou log in the Welcome Page will prompt you to configure Artifactory using the Onboarding Wizard.\n\n- Press **Get Started**\n\n  <ArtDirection>\n\n  ![Initial JFrog](/images/1-jfrog.png)\n\n  </ArtDirection>\n\n- The first step of the setup wizard is to change the default password. It is\n recommend you use a password generated by a password manager. [1Password\n ](https://1password.com) is the tool IBM recommends to its employees.\n\n  <ArtDirection>\n\n  ![Reset Password](/images/2-resetpassword.png)\n\n  </ArtDirection>\n\n- Save the password somewhere safe or in your password manager; you will need to\n  manually update the password in the  `secret` that is stored in the `tools` namespace/project\n  called `artifactory-access`. There are more detailed instructions after you\n  have completed the setup wizard.\n\nThe next step is to define the base url that will be used by the server. \n\n- From the browser you are currently using copy the `URL` from the address bar.\n\n  <ArtDirection>\n\n  ![Base URL](/images/3-baseurl.png)\n\n  </ArtDirection>\n\n- Past the URL into the **Select Base URL** form and remove any trailing\n context roots, similar to the one in this view.\n\n  <ArtDirection>\n\n  ![Base URL](/images/3-baseurl-complete.png)\n\n  </ArtDirection>\n\n- The next page in the wizard is the Configure a Proxy Server page. This is to\n  setup a proxy for external resources. You can click **Next** to skip this\n  step.\n\n  <ArtDirection>\n\n  ![Base URL](/images/4-proxy.png)\n\n  </ArtDirection>\n\n- The next page in the wizard is the Create Repositories page. Since the open source release of\n  Artifactory doesn't provide a package for Helm repositories, we will use a generic repository to hold the helm\n  artifacts.\n\n- Select **Generic**, then press **Next**\n\n  <ArtDirection>\n\n  ![Select Repo Type](/images/5-selectrepotype.png)\n\n  </ArtDirection>\n\n- The next page in the wizard is the Onboarding Complete page. \n\n- Press **Finish**\n\n  <ArtDirection>\n\n  ![Setup Complete](/images/5-createcomplete.png)\n\n  </ArtDirection>\n\n### Allow Anonymous Access to Artifactory\n\n- Open the Artifactory dashboard from the [<Globals name=\"dashboard\" />](/getting-started/dashboard) and login\n\n- Click on the **Settings** tab on the left menu (the one with the gear icon), and then select\n **Security**\n    ![Security Configuration](/images/securitysettings.png)\n\n- Check the `Allow Anonymous Access` check box and press **Save**\n\n### Obtain the encrypted password \n\nTo enable the CI pipelines ([Jenkins](/tools/continuous-integration), [Tekton](/tools/continuous-integration-tekton), etc.)\nto store the Helm artifacts in the Artifactory repository, we need to obtain\nArtifactory's encrypted password and save it where the pipeline can access the password -- in the `artifactory-access`\nKubernetes secret in the `tools` namespace in the Development Tools environment.\n\n- In the Artifactory console, press the **Welcome, admin** menu button in the top right corner of the console and select **Edit profile**\n\n- In the User Profile: admin page, enter you Artifactory password and press **Unlock**\n\n  <ArtDirection>\n\n  ![API Key](/images/jfrogapikey.png)\n\n  </ArtDirection>\n\nBelow, in the **Authentication Settings** section, is the **Encrypted Password** field.\n\n- Press the **Eye** icon to view the encrypted password and press the **Cut & Paste** icon to copy it\n\n  <ArtDirection>\n\n  ![Initial JFrog](/images/viewapikey.png)\n\n  </ArtDirection>\n\n- Now we have obtained the **Encrypt** key and had kept a copy of the\n  Password we changed on the initial setup wizard. We need to update the\n  secrets that stores these inside the cluster.\n\n### Update the secret - OpenShift 4\n\n- In the OpenShift 4 console, go to **Administrator** > **Workloads** > **Secrets**. At the top, select the `tools` project and filter for `artifactory`. Select **Edit Secret** on `artifactory-access`. (You do not need to base encode these values the OpenShift console does this for you.)\n  ![Initial JFrog](/images/settingskeys.png)\n\n- Update the values that you retrieved for the encrypt key and updated the admin password\n    - Add a key/value for `ARTIFACTORY_ENCRYPT` and set the value to your encrypt key value\n    - Update the `ARTIFACTORY_PASSWORD` value with thew new admin password\n \n- Click **Save** in OpenShift console \n\n- View the secret in the console and confirm that the visible value of `ARTIFACTORY_ENCRYPT` matches the encrypted password shown in the Artifactory console\n\n- On the command line, run `igc credentials` and verify that the Artifactory details have been updated\n\n### Update the secret - Kubernetes and OpenShift 3\n\nTo update the secret in Kuberentes or Openshift 3, navigate to the `secret` called `artifactory-access`\nin the `tools` namespace and update the following values. You will need encode these value in base64 key before\nediting the secret.\n\n[Kubernetes secrets](https://kubernetes.io/docs/concepts/configuration/secret/#creating-a-secret-manually) \nstore data in base64 format. So to store Artifactory's encrypted password in a secret, it needs to be encoded into\nbase64.\n\nAny base64 encoding tool will work. For example:\n\n- Go to the [Base64 Encode](https://www.base64encode.org/) website\n\n- Paste the encrypted password into the online tool and press the **Encode** button\n\n- In the field below, copy the encoded value into you clipboard or store it somewhere safe\n\n- Find the `ARTIFACTORY_ENCRYPT` value (under `data`) and paste in the Artifactory base64 key into the field\n\n- Find the `ARTIFACTORY_PASSWORD` value (under `data`) and paste in the\n\n## Rerun the Pipeline\n\nPreviously, when you deployed you first app, the pipeline's Package Helm Chart stage didn't store the chart because \nthe `ARTIFACTORY_ENCRYPT` property was not set. Now that it has been set, rerun your pipeline and check that the Helm\nchart for your app is stored correctly in Artifactory with matching semantic version information.\n\n- In the Artifactory console, select the Artifacts page and expand the `generic-local` repository\n\n  <ArtDirection>\n\n  ![Artifact Repository Browser](/images/artifact-repo-browser.png)\n\n  </ArtDirection>\n\nYou will see a folder named after your resource group containing the tar file for a Helm chart.\n\n## Conclusion\n\nArtifactory is now set up in your <Globals name=\"env\" /> and CI pipelines can\n store Helm charts in Artifactory repository. Artifactory can now be used as a\n  Helm repository for CD tools like ArgoCD and IBM Cloud Pak for Multi\n   Cloud\n   Management.\n","type":"Mdx","contentDigest":"d3b194db2fd0f9e19784e3c427c0b99e","counter":917,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Artifactory Setup"},"exports":{},"rawBody":"---\ntitle: Artifactory Setup\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nComplete the steps for setting up the Artifactory tool\n\n</PageDescription>\n\n\n<InlineNotification>\n\n**Note**: As of v1.9.0 of the Artifactory module, these steps have been automated and should not be required after a <Globals name=\"tinyName\" /> install. The\ninstructions are provided here to understand what steps are required to manually integrate the Artifactory instance into the pipelines.\n\n</InlineNotification>\n\n\n## Overview\n\nArtifactory is the [<Globals name=\"env\" />'s artifact repository manager](/tools/artifact-management).\nBefore you can use it as part of the [continuous integration pipeline](/tools/continuous-integration),\nit first must be configured as part of the environment.\n\n##  Configuration\n\nSet up Artifactory in the <Globals name=\"env\" /> with a Helm repository.\nAlso, set up the <Globals name=\"env\" /> to access Artifactory.\n\n<InlineNotification kind=\"warning\">\n\n**Warning:** The version of Artifactory that is installed into the cluster is\n not configured for high availability. It is limited to the\n  storage size of your cluster. It is highly recommended you integrate your\n   pipelines with an enterprise grade Helm repository or artifact\n    management\n    system.  \n     \n</InlineNotification>\n\n### Set up Artifactory\n\nCreate a repository in Artifactory for storing Helm charts.\n\n- Open the Artifactory dashboard from the [<Globals name=\"dashboard\" />](/getting-started/dashboard) and login\n\n- Log into Artifactory using the default userid and password, `igc credentials` can show these values. The first time\nyou log in the Welcome Page will prompt you to configure Artifactory using the Onboarding Wizard.\n\n- Press **Get Started**\n\n  <ArtDirection>\n\n  ![Initial JFrog](/images/1-jfrog.png)\n\n  </ArtDirection>\n\n- The first step of the setup wizard is to change the default password. It is\n recommend you use a password generated by a password manager. [1Password\n ](https://1password.com) is the tool IBM recommends to its employees.\n\n  <ArtDirection>\n\n  ![Reset Password](/images/2-resetpassword.png)\n\n  </ArtDirection>\n\n- Save the password somewhere safe or in your password manager; you will need to\n  manually update the password in the  `secret` that is stored in the `tools` namespace/project\n  called `artifactory-access`. There are more detailed instructions after you\n  have completed the setup wizard.\n\nThe next step is to define the base url that will be used by the server. \n\n- From the browser you are currently using copy the `URL` from the address bar.\n\n  <ArtDirection>\n\n  ![Base URL](/images/3-baseurl.png)\n\n  </ArtDirection>\n\n- Past the URL into the **Select Base URL** form and remove any trailing\n context roots, similar to the one in this view.\n\n  <ArtDirection>\n\n  ![Base URL](/images/3-baseurl-complete.png)\n\n  </ArtDirection>\n\n- The next page in the wizard is the Configure a Proxy Server page. This is to\n  setup a proxy for external resources. You can click **Next** to skip this\n  step.\n\n  <ArtDirection>\n\n  ![Base URL](/images/4-proxy.png)\n\n  </ArtDirection>\n\n- The next page in the wizard is the Create Repositories page. Since the open source release of\n  Artifactory doesn't provide a package for Helm repositories, we will use a generic repository to hold the helm\n  artifacts.\n\n- Select **Generic**, then press **Next**\n\n  <ArtDirection>\n\n  ![Select Repo Type](/images/5-selectrepotype.png)\n\n  </ArtDirection>\n\n- The next page in the wizard is the Onboarding Complete page. \n\n- Press **Finish**\n\n  <ArtDirection>\n\n  ![Setup Complete](/images/5-createcomplete.png)\n\n  </ArtDirection>\n\n### Allow Anonymous Access to Artifactory\n\n- Open the Artifactory dashboard from the [<Globals name=\"dashboard\" />](/getting-started/dashboard) and login\n\n- Click on the **Settings** tab on the left menu (the one with the gear icon), and then select\n **Security**\n    ![Security Configuration](/images/securitysettings.png)\n\n- Check the `Allow Anonymous Access` check box and press **Save**\n\n### Obtain the encrypted password \n\nTo enable the CI pipelines ([Jenkins](/tools/continuous-integration), [Tekton](/tools/continuous-integration-tekton), etc.)\nto store the Helm artifacts in the Artifactory repository, we need to obtain\nArtifactory's encrypted password and save it where the pipeline can access the password -- in the `artifactory-access`\nKubernetes secret in the `tools` namespace in the Development Tools environment.\n\n- In the Artifactory console, press the **Welcome, admin** menu button in the top right corner of the console and select **Edit profile**\n\n- In the User Profile: admin page, enter you Artifactory password and press **Unlock**\n\n  <ArtDirection>\n\n  ![API Key](/images/jfrogapikey.png)\n\n  </ArtDirection>\n\nBelow, in the **Authentication Settings** section, is the **Encrypted Password** field.\n\n- Press the **Eye** icon to view the encrypted password and press the **Cut & Paste** icon to copy it\n\n  <ArtDirection>\n\n  ![Initial JFrog](/images/viewapikey.png)\n\n  </ArtDirection>\n\n- Now we have obtained the **Encrypt** key and had kept a copy of the\n  Password we changed on the initial setup wizard. We need to update the\n  secrets that stores these inside the cluster.\n\n### Update the secret - OpenShift 4\n\n- In the OpenShift 4 console, go to **Administrator** > **Workloads** > **Secrets**. At the top, select the `tools` project and filter for `artifactory`. Select **Edit Secret** on `artifactory-access`. (You do not need to base encode these values the OpenShift console does this for you.)\n  ![Initial JFrog](/images/settingskeys.png)\n\n- Update the values that you retrieved for the encrypt key and updated the admin password\n    - Add a key/value for `ARTIFACTORY_ENCRYPT` and set the value to your encrypt key value\n    - Update the `ARTIFACTORY_PASSWORD` value with thew new admin password\n \n- Click **Save** in OpenShift console \n\n- View the secret in the console and confirm that the visible value of `ARTIFACTORY_ENCRYPT` matches the encrypted password shown in the Artifactory console\n\n- On the command line, run `igc credentials` and verify that the Artifactory details have been updated\n\n### Update the secret - Kubernetes and OpenShift 3\n\nTo update the secret in Kuberentes or Openshift 3, navigate to the `secret` called `artifactory-access`\nin the `tools` namespace and update the following values. You will need encode these value in base64 key before\nediting the secret.\n\n[Kubernetes secrets](https://kubernetes.io/docs/concepts/configuration/secret/#creating-a-secret-manually) \nstore data in base64 format. So to store Artifactory's encrypted password in a secret, it needs to be encoded into\nbase64.\n\nAny base64 encoding tool will work. For example:\n\n- Go to the [Base64 Encode](https://www.base64encode.org/) website\n\n- Paste the encrypted password into the online tool and press the **Encode** button\n\n- In the field below, copy the encoded value into you clipboard or store it somewhere safe\n\n- Find the `ARTIFACTORY_ENCRYPT` value (under `data`) and paste in the Artifactory base64 key into the field\n\n- Find the `ARTIFACTORY_PASSWORD` value (under `data`) and paste in the\n\n## Rerun the Pipeline\n\nPreviously, when you deployed you first app, the pipeline's Package Helm Chart stage didn't store the chart because \nthe `ARTIFACTORY_ENCRYPT` property was not set. Now that it has been set, rerun your pipeline and check that the Helm\nchart for your app is stored correctly in Artifactory with matching semantic version information.\n\n- In the Artifactory console, select the Artifacts page and expand the `generic-local` repository\n\n  <ArtDirection>\n\n  ![Artifact Repository Browser](/images/artifact-repo-browser.png)\n\n  </ArtDirection>\n\nYou will see a folder named after your resource group containing the tar file for a Helm chart.\n\n## Conclusion\n\nArtifactory is now set up in your <Globals name=\"env\" /> and CI pipelines can\n store Helm charts in Artifactory repository. Artifactory can now be used as a\n  Helm repository for CD tools like ArgoCD and IBM Cloud Pak for Multi\n   Cloud\n   Management.\n","fileAbsolutePath":"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/src/pages/admin/artifactory-setup/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","3273249464","63531786","63531786","768070550"]}