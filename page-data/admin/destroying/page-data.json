{"componentChunkName":"component---src-pages-admin-destroying-index-mdx","path":"/admin/destroying/","result":{"pageContext":{"frontmatter":{"title":"Destroying"},"relativePagePath":"/admin/destroying/index.mdx","titleType":"page","MdxNode":{"id":"1ff7d181-1adb-578b-a209-b7ccebfeb8ee","children":[],"parent":"2829810f-1fd9-59ef-8e84-2e21a8690c94","internal":{"content":"---\ntitle: Destroying\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nUse the <Globals name=\"longName\" /> environment to delete itself\n\n</PageDescription>\n\n\n<InlineNotification>\n\n**Note**: An **environment administrator** performs the steps on this page. See [Plan Installation > Roles](/admin/plan-installation#roles) for the overview of the roles involved.\n\n</InlineNotification>\n\n\nNot only can the <Globals name=\"shortName\" /> create the environment, the environment can also delete itself. The \nenvironment is installed using Terraform, which stores the state of the applied modules in the `workspace/{cluster name}` \nfolder. Terraform can use that state to delete what it installed.\n\nDestroy a <Globals name=\"env\" /> following these steps:\n\n1. Run the following command to launch a [Developer Tools container](/tools/tools-image):\n    ```shell script\n    ./launch.sh\n    ```\n\n2. In the container, change to the `workspace/{cluster name}` directory:\n    ```shell script\n    cd workspace/{cluster name}\n    ```\n\n3. In the container, run the `destroy.sh` script to apply the Terraform destroy:\n    ```shell script\n    ./destroy.sh\n    ```\n\n    Rather than directly running `terraform desroy`, the `destroy.sh` script first builds a \"destroy plan\" from the current\n    state then applies that plan. Performing the destroy in this way is more reliable and allows for certain resources\n    to be selectively destroyed/saved.\n","type":"Mdx","contentDigest":"f141aebba7c07fd46a207c4161f8b20a","counter":940,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Destroying"},"exports":{},"rawBody":"---\ntitle: Destroying\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nUse the <Globals name=\"longName\" /> environment to delete itself\n\n</PageDescription>\n\n\n<InlineNotification>\n\n**Note**: An **environment administrator** performs the steps on this page. See [Plan Installation > Roles](/admin/plan-installation#roles) for the overview of the roles involved.\n\n</InlineNotification>\n\n\nNot only can the <Globals name=\"shortName\" /> create the environment, the environment can also delete itself. The \nenvironment is installed using Terraform, which stores the state of the applied modules in the `workspace/{cluster name}` \nfolder. Terraform can use that state to delete what it installed.\n\nDestroy a <Globals name=\"env\" /> following these steps:\n\n1. Run the following command to launch a [Developer Tools container](/tools/tools-image):\n    ```shell script\n    ./launch.sh\n    ```\n\n2. In the container, change to the `workspace/{cluster name}` directory:\n    ```shell script\n    cd workspace/{cluster name}\n    ```\n\n3. In the container, run the `destroy.sh` script to apply the Terraform destroy:\n    ```shell script\n    ./destroy.sh\n    ```\n\n    Rather than directly running `terraform desroy`, the `destroy.sh` script first builds a \"destroy plan\" from the current\n    state then applies that plan. Performing the destroy in this way is more reliable and allows for certain resources\n    to be selectively destroyed/saved.\n","fileAbsolutePath":"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/src/pages/admin/destroying/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","3273249464","63531786","63531786","768070550"]}