{"version":3,"sources":["webpack:///./src/pages/getting-started-day-1/code-analysis/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","name","isMDXComponent"],"mappings":"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","file":"component---src-pages-getting-started-day-1-code-analysis-index-mdx-9d7481700afee78603e3.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`In IBM Garage Method, one of the Develop practices is to `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/garage/method/practices/code/practice_automated_testing/\"\n      }}>{`automate tests for continuous delivery`}</a>{`, in part by using `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/garage/method/practices/code/practice_automated_testing/tool_lint\"\n      }}>{`static source code analysis tools`}</a>{`. `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.sonarqube.org/\"\n      }}>{`SonarQube`}</a>{` automates performing static code analysis and enables it to be added to a continuous integration pipeline. The `}<Globals name=\"env\" mdxType=\"Globals\" />{`’s CI pipeline (`}<a parentName=\"p\" {...{\n        \"href\": \"/tools/continuous-integration\"\n      }}>{`Jenkins`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"/tools/continuous-integration-tekton\"\n      }}>{`Tekton`}</a>{`, etc.) includes a SonarQube stage. Simply by building your app using the pipeline, your code gets analyzed, just open the SonarQube UI to browse the findings.`}</p>\n    <h2>{`What is code analysis`}</h2>\n    <p>{`Static code analysis (a.k.a. code analysis) is a method of debugging by performing automated evaluation of code\nwithout executing the program. The analysis is structured as a set of coding rules that evaluate the code’s quality.\nAnalysis can be performed on source code or compiled code. The analyzer must support the programming language\nthe code is written in so that it can parse the code like a compiler or simulate its execution.`}</p>\n    <p>{`Static code analysis differs from dynamic analysis, which observes and evaluates a running program. Dynamic analysis\nrequires test inputs and can meansure user functionality as well as runtime qualities like execution time and resource consumption.\nA code review is static code analysis performed by a human.`}</p>\n    <p>{`Static code analysis can evaluate several different aspects of code quality, such as:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Reliability`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Bug`}</strong>{`: Programming error that breaks functionality`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Security`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Vulnerability`}</strong>{`: A point in a program that can be attacked`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Hotspot`}</strong>{`: Code that uses a security-sensitive API`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Maintainability`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Coding standards`}</strong>{`: Practices that increase the human readability and undestandability of code`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Code smell`}</strong>{`: Code that is confusing and difficult to maintain`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Technical debt`}</strong>{`: Estimated time required to fix all maintainability issues`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Complexity`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Code complexity`}</strong>{`: Code’s control flow and number of paths through the code`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Duplications`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Duplicated code`}</strong>{`: The same code sequence appearing more than once in the same program`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Manageability`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Testability`}</strong>{`: How easily tests can be developed and used to show the program meets requirements`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Portability`}</strong>{`: How easily the program can be reused in different environments`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Reusability`}</strong>{`: The program’s modularity, loose coupling, and limited interdependencies`}</li>\n        </ul></li>\n    </ul>\n    <p>{`Static code analysis collects several metrics that measure code quality:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Issues`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Type`}</strong>{`: Bug, Vunerability, Code Smell`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Sevarity`}</strong><ul parentName=\"li\">\n              <li parentName=\"ul\"><strong parentName=\"li\">{`Blocker`}</strong>{`: Bug with a high probability to impact the behavior of the application in production`}</li>\n              <li parentName=\"ul\"><strong parentName=\"li\">{`Critical`}</strong>{`: Bug with a low probability to impact the behavior of the application in production, or a security vulnerability`}</li>\n              <li parentName=\"ul\"><strong parentName=\"li\">{`Major`}</strong>{`: Code smell with high impact to developer productivity`}</li>\n              <li parentName=\"ul\"><strong parentName=\"li\">{`Minor`}</strong>{`: Code smell with slight impact to developer productivity`}</li>\n              <li parentName=\"ul\"><strong parentName=\"li\">{`Info`}</strong>{`: Neither a bug nor a code smell, just a finding`}</li>\n            </ul></li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Size`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Classes`}</strong>{`: Number of class definitions (concrete, abstract, nested, interfaces, enums, annotations)`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Lines of code`}</strong>{`: Linespace seperated text that is not whitespace or comments`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Comment lines`}</strong>{`: Linespace seperated text containing significant commentary or commented-out code`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Coverage`}</strong><ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Test coverage`}</strong>{`: Code that was executed by a test suite`}</li>\n        </ul></li>\n    </ul>\n    <p>{`A `}<strong parentName=\"p\">{`Quality gate`}</strong>{` defines a policy that assesses pass/fail whether or not the number of issues and their severity is acceptable.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}