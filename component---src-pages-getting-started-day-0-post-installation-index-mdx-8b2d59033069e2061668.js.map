{"version":3,"sources":["webpack:///./src/pages/getting-started-day-0/post-installation/index.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","Tabs","Tab","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","label","isMDXComponent","PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","Main","padded","NextPrevious","Utils","module","exports"],"mappings":"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","file":"component---src-pages-getting-started-day-0-post-installation-index-mdx-8b2d59033069e2061668.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst Tabs = makeShortcode(\"Tabs\");\nconst Tab = makeShortcode(\"Tab\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Provides a walk-through of the provisioned environment and the steps to validate it is ready to\nbegin on-boarding developers.`}</p>\n    </PageDescription>\n    <h2>{`Explore the provisioned resources`}</h2>\n    <h3><Globals name=\"ic\" mdxType=\"Globals\" />{` resources`}</h3>\n    <p>{`Once the Terraform scripts have finished, you can see the resources that the scripts created in IBM Cloud:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`In the IBM Cloud console, open the `}<a parentName=\"li\" {...{\n          \"href\": \"https://cloud.ibm.com/resources\",\n          \"title\": \"Resource list\"\n        }}>{`Resource List`}</a></li>\n      <li parentName=\"ol\">{`On the Resource List page, filter by your Resource Group by selecting the resource group from the `}<inlineCode parentName=\"li\">{`Group`}</inlineCode>{` dropdown (e.g. `}<inlineCode parentName=\"li\">{`appdev-team`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\">{`You should see these resources listed under the following sections:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Clusters`}</strong>{`: 1, either Kubernetes or OpenShift`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Services`}</strong>{`: depending on the configuration could be quite a few (LogDNA, Sysdig, Activity Tracker, Watson Assistant, Watson Studio, PostgreSQL, MongoDB, etc)`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Storage`}</strong>{`: possibly Cloud Object Storage`}</li>\n        </ul>\n      </li>\n    </ol>\n    <h3>{`Cluster resources`}</h3>\n    <p>{`Log in to the cluster and look at the console to see the resources that have been provisioned within the cluster.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Access the cluster console`}</p>\n        <Tabs mdxType=\"Tabs\">\n          <Tab label=\"IBM Cloud\" mdxType=\"Tab\">\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`In the IBM Cloud console, open the `}<a parentName=\"li\" {...{\n                  \"href\": \"https://cloud.ibm.com/resources\",\n                  \"title\": \"Resource list\"\n                }}>{`Resource List`}</a></li>\n              <li parentName=\"ul\">{`On the Resource List page, filter by your Resource Group by selecting the resource group from the `}<inlineCode parentName=\"li\">{`Group`}</inlineCode>{` dropdown (e.g. `}<inlineCode parentName=\"li\">{`appdev-team`}</inlineCode>{`)`}</li>\n              <li parentName=\"ul\">{`Expand the `}<strong parentName=\"li\">{`Clusters`}</strong>{` section and click on the appropriate cluster`}</li>\n              <li parentName=\"ul\">{`Click the button to open the Kubernetes or OpenShift web console`}</li>\n            </ul>\n          </Tab>\n          <Tab label=\"Hybrid\" mdxType=\"Tab\">\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`\\`\\`\\`shell script\noc login {server_url} -u {username} -p {password}\noc console\n\\`\\`\\`\n`}</code></pre>\n          </Tab>\n        </Tabs>\n      </li>\n    </ol>\n    <br />\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Navigate to the `}<inlineCode parentName=\"li\">{`tools`}</inlineCode>{` namespace/project.`}</li>\n      <li parentName=\"ol\">{`Look at the status of the pods in the cluster. All should be either in `}<inlineCode parentName=\"li\">{`running`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`completed`}</inlineCode>{` state.`}</li>\n      <li parentName=\"ol\">{`If LogDNA or Sysdig were bound to the cluster then a `}<inlineCode parentName=\"li\">{`ibm-observe`}</inlineCode>{` namespace/project should have been created containing\na pod for each node in the cluster`}</li>\n    </ol>\n    <h3>{`Validate LogDNA`}</h3>\n    <p>{`If LogDNA was provisioned and/or bound to the cluster, check that log data is flowing into `}<a parentName=\"p\" {...{\n        \"href\": \"/tools/log-management\"\n      }}>{`LogDNA`}</a></p>\n    <h3>{`Validate/complete the SysDig setup`}</h3>\n    <p>{`Complete the `}<a parentName=\"p\" {...{\n        \"href\": \"/admin/sysdig-setup\"\n      }}>{`setup of Sysdig`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"/tools/monitoring\"\n      }}>{`check the monitoring data`}</a>{` is flowing`}</p>\n    <h3>{`Validate the Developer Dashboard`}</h3>\n    <p>{`Test opening the `}<a parentName=\"p\" {...{\n        \"href\": \"/getting-started/dashboard\"\n      }}><Globals name=\"dashboard\" mdxType=\"Globals\" /></a></p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Log into the cluster from the command-line`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run either or all of the CLI options to load the dashboard`}</p>\n        <Tabs mdxType=\"Tabs\">\n          <Tab label=\"oc\" mdxType=\"Tab\">\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\",\n                \"metastring\": \"script\",\n                \"script\": true\n              }}>{`oc dashboard\n`}</code></pre>\n          </Tab>\n          <Tab label=\"kubectl\" mdxType=\"Tab\">\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\",\n                \"metastring\": \"script\",\n                \"script\": true\n              }}>{`kubetl dashboard\n`}</code></pre>\n          </Tab>\n          <Tab label=\"IGC\" mdxType=\"Tab\">\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-shell\",\n                \"metastring\": \"script\",\n                \"script\": true\n              }}>{`igc dashboard\n`}</code></pre>\n          </Tab>\n        </Tabs>\n      </li>\n    </ol>\n    <h3>{`Validate the installed tools`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Log into the cluster from the command-line`}</li>\n      <li parentName=\"ol\">{`Run the `}<a parentName=\"li\" {...{\n          \"href\": \"/getting-started/cli\"\n        }}><Globals name=\"igccli\" mdxType=\"Globals\" /></a>{` `}<inlineCode parentName=\"li\">{`credentials`}</inlineCode>{` command to list the credentials for the tools`}\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`oc credentials -n tools\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">{`Use the url and credentials provided for each tool to validate the provided credentials`}</li>\n    </ol>\n    <h2>{`Additional configuration`}</h2>\n    <p>{`The following post installation setup is required. To get the developers enabled quickly, make sure you have\ncompleted at least post installation tasks. The customization is optional and down to development team needs.`}</p>\n    <h3>{`Customize the Dashboard configuration`}</h3>\n    <p>{`Perform the steps in `}<a parentName=\"p\" {...{\n        \"href\": \"/admin/config-dashboard\"\n      }}>{`Configure Dashboard`}</a>{` to customize tiles and menu items for the tools\nthat are external to the cluster.`}</p>\n    <h3>{`Set up user access`}</h3>\n    <p>{`Configure the RBAC rules in the development cluster. This restricts who can change the parts of the cluster where\nthe tools are installed.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Run the RBAC script `}<inlineCode parentName=\"li\">{`./terraform/scripts/rbac.sh`}</inlineCode>{` found in the `}<inlineCode parentName=\"li\">{`ibm-garage-iteration-zero`}</inlineCode>{` repository`}</li>\n    </ol>\n    <h3>{`Create a CI namespace/project`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Log into the cluster from the command-line`}</li>\n      <li parentName=\"ol\">{`Run the `}<a parentName=\"li\" {...{\n          \"href\": \"/getting-started/cli\"\n        }}><Globals name=\"igccli\" mdxType=\"Globals\" /></a>{` `}<inlineCode parentName=\"li\">{`sync`}</inlineCode>{` command to create the namespace/project`}\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`oc sync --dev {project}\n`}</code></pre>\n      </li>\n    </ol>\n    <h3>{`Setup a GitOps repo`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Follow the steps to `}<a parentName=\"li\" {...{\n          \"href\": \"/tools/continuous-delivery#set-up-the-gitops-repo\"\n        }}>{`create a GitOps repo`}</a>{`.`}</li>\n      <li parentName=\"ol\">{`Follow the steps to `}<a parentName=\"li\" {...{\n          \"href\": \"/tools/continuous-delivery#hook-the-ci-pipeline-to-the-cd-pipeline\"\n        }}>{`add configuration for the CI pipeline`}</a>{`, using\nthe namespace created in the `}<a parentName=\"li\" {...{\n          \"href\": \"#create-a-ci-namespaceproject\"\n        }}>{`previous step`}</a>{`.`}</li>\n    </ol>\n    <h3>{`Test the pipeline`}</h3>\n    <p>{`The best way to verify that the tools have been configured properly is to deploy a sample pipeline. Follow the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/getting-started-day-1/deploy-app\"\n      }}>{`deploy an app`}</a>{` steps for one of the starter kits to ensure that all the tools have\nbeen configured properly.`}</p>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` Use the project/namespace created in the `}<a parentName=\"p\" {...{\n        \"href\": \"#create-a-ci-namespaceproject\"\n      }}>{`previous two steps`}</a>{` when deploying the app`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};"],"sourceRoot":""}