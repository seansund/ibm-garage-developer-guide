{"version":3,"sources":["webpack:///./src/pages/getting-started-day-1/image-registry/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","name","isMDXComponent"],"mappings":"oQAOaA,G,UAAe,IACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,8HAA6G,6BAAGC,WAAW,KAAQ,CAC/H,KAAQ,+CADiG,uBAA7G,2CAIA,6KACE,6BAAGA,WAAW,KAAQ,CACpB,KAAQ,kDADV,0BADF,uXAMG,0BAAYA,WAAW,KAAvB,UANH,qFAOA,4IAA2H,YAAC,IAAD,CAASC,KAAK,MAAMF,QAAQ,YAAvJ,mVAIA,sBACE,kBAAIC,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,wCADQ,6BAGpB,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,uBADQ,gBAGpB,kBAAIA,WAAW,MAAf,SACA,kBAAIA,WAAW,MAAK,YAAC,IAAD,CAASC,KAAK,MAAMF,QAAQ,YAAhD,oBAMNH,EAAWM,gBAAiB","file":"component---src-pages-getting-started-day-1-image-registry-index-mdx-a62c89450f0323f6aaa8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`An Image Registry is a repository of versioned container images. It is perhaps a subset of the larger `}<a parentName=\"p\" {...{\n        \"href\": \"/getting-started-day-1/artifact-management\"\n      }}>{`Artifact Management`}</a>{` topic\nbut has special considerations.`}</p>\n    <p>{`A specific protocol has been defined around building, pushing, tagging and pulling container images to and from an Image Repository. Typically,\nthe `}<a parentName=\"p\" {...{\n        \"href\": \"/getting-started-day-1/continuous-integration\"\n      }}>{`continuous integration`}</a>{` process is responsible for verifying and building the application\nsource into an image and pushing it into the registry. At deployment time, the deployment descriptor (e.g. kubernetes resource definition) references\nthe image at its location within the image registry and the container platform pulls the image and manages the running image in the cluster. Tools\nlike `}<inlineCode parentName=\"p\">{`skopeo`}</inlineCode>{` can also be used within the process to copy images from one registry to another.`}</p>\n    <p>{`There are a number of options available for the Image Registry, both running in-cluster and outside of the cluster. `}<Globals name=\"ocp\" mdxType=\"Globals\" />{`\neven provides an image registry as part of the platform. While an intermediate image registry might be used during the CI process,\nin an enterprise environment it is ideal to have a centrally managed image registry from which vulnerability scans, certifications, and\nbackups can be performed. Some of the available options include:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/tools/ibm-cloud-container-registry\"\n        }}>{`IBM Cloud Image Registry`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/tools/artifactory\"\n        }}>{`Artifactory`}</a></li>\n      <li parentName=\"ul\">{`Nexus`}</li>\n      <li parentName=\"ul\"><Globals name=\"ocp\" mdxType=\"Globals\" /> image streams</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}