{"version":3,"sources":["webpack:///./src/pages/admin/destroying/index.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"sQAOaA,G,UAAe,IAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAqBN,EAAc,sBACnCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,eAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAI5E,YAACP,EAAD,CAAiBO,QAAQ,mBACvB,gCAAe,YAAC,IAAD,CAASX,KAAK,WAAWW,QAAQ,YAAhD,kCAEF,YAACN,EAAD,CAAoBM,QAAQ,sBAC1B,qBAAG,sBAAQC,WAAW,KAAnB,QAAH,QAAoD,sBAAQA,WAAW,KAAnB,6BAApD,yCAA2J,6BAAGA,WAAW,KAAQ,CAC7K,KAAQ,mCAD+I,6BAA3J,6CAIF,yCAAwB,YAAC,IAAD,CAASZ,KAAK,YAAYW,QAAQ,YAA1D,wKAC6F,0BAAYC,WAAW,KAAvB,4BAD7F,uEAGA,kCAAiB,YAAC,IAAD,CAASZ,KAAK,MAAMW,QAAQ,YAA7C,2BACA,sBACE,kBAAIC,WAAW,MACb,iBAAGA,WAAW,MAAd,yCAA6D,6BAAGA,WAAW,KAAQ,CAC/E,KAAQ,uBADiD,6BAA7D,KAGA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,iBACb,WAAc,SACd,QAAU,IAHO,mBAOvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,mCAAuD,0BAAYA,WAAW,KAAvB,4BAAvD,eACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,iBACb,WAAc,SACd,QAAU,IAHO,mCAOvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,6BAAiD,0BAAYA,WAAW,KAAvB,cAAjD,2CACA,mBAAKA,WAAW,MAAK,gCAAMA,WAAW,OAAU,CAC5C,UAAa,iBACb,WAAc,SACd,QAAU,IAHO,mBAMrB,iBAAGA,WAAW,MAAd,gCAAoD,0BAAYA,WAAW,KAAvB,oBAApD,SAA0H,0BAAYA,WAAW,KAAvB,cAA1H,qNASRH,EAAWI,gBAAiB","file":"component---src-pages-admin-destroying-index-mdx-c2f74991cf06e63280db.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Use the `}<Globals name=\"longName\" mdxType=\"Globals\" />{` environment to delete itself`}</p>\n    </PageDescription>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note`}</strong>{`: An `}<strong parentName=\"p\">{`environment administrator`}</strong>{` performs the steps on this page. See `}<a parentName=\"p\" {...{\n          \"href\": \"/admin/plan-installation#roles\"\n        }}>{`Plan Installation > Roles`}</a>{` for the overview of the roles involved.`}</p>\n    </InlineNotification>\n    <p>{`Not only can the `}<Globals name=\"shortName\" mdxType=\"Globals\" />{` create the environment, the environment can also delete itself. The\nenvironment is installed using Terraform, which stores the state of the applied modules in the `}<inlineCode parentName=\"p\">{`workspace/{cluster name}`}</inlineCode>{`\nfolder. Terraform can use that state to delete what it installed.`}</p>\n    <p>{`Destroy a `}<Globals name=\"env\" mdxType=\"Globals\" />{` following these steps:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the following command to launch a `}<a parentName=\"p\" {...{\n            \"href\": \"/tools/tools-image\"\n          }}>{`Developer Tools container`}</a>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`./launch.sh\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the container, change to the `}<inlineCode parentName=\"p\">{`workspace/{cluster name}`}</inlineCode>{` directory:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`cd workspace/{cluster name}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the container, run the `}<inlineCode parentName=\"p\">{`destroy.sh`}</inlineCode>{` script to apply the Terraform destroy:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\",\n            \"metastring\": \"script\",\n            \"script\": true\n          }}>{`./destroy.sh\n`}</code></pre>\n        <p parentName=\"li\">{`Rather than directly running `}<inlineCode parentName=\"p\">{`terraform desroy`}</inlineCode>{`, the `}<inlineCode parentName=\"p\">{`destroy.sh`}</inlineCode>{` script first builds a “destroy plan” from the current\nstate then applies that plan. Performing the destroy in this way is more reliable and allows for certain resources\nto be selectively destroyed/saved.`}</p>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}