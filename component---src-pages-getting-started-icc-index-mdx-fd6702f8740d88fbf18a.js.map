{"version":3,"sources":["webpack:///./src/pages/getting-started/icc/index.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./src/gatsby-theme-carbon/templates/Default.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","module","exports","PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","Utils"],"mappings":"0PASaA,G,oBAAe,IAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAqBN,EAAc,sBACnCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,eAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAI5E,YAACP,EAAD,CAAiBO,QAAQ,mBACvB,2EAEF,qLACA,uBAAK,oBAAMC,WAAW,MAClB,UAAa,kBADZ,+FAKL,+CACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,kBADZ,oFAKL,2MACA,qCACA,gDAA+B,iBAAGA,WAAW,IACzC,KAAQ,kCADmB,yBAA/B,8CAGA,oCACA,iDAAgC,0BAAYA,WAAW,KAAvB,MAAhC,mFAAkK,0BAAYA,WAAW,KAAvB,MAAlK,kDACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,kBADZ,+DAOL,0CAAyB,0BAAYA,WAAW,KAAvB,MAAzB,oDACA,sBACE,kBAAIA,WAAW,MAAf,oBAAyC,iBAAGA,WAAW,KACnD,KAAQ,iFAD6B,6CAGvC,kBAAIA,WAAW,MACb,kBAAIA,WAAW,MAAf,gBAAqC,iBAAGA,WAAW,KAC/C,KAAQ,sDADyB,sBAKzC,kBAAIA,WAAW,MAAf,WAAgC,iBAAGA,WAAW,KAC1C,KAAQ,yCADoB,wBAG9B,mBAAKA,WAAW,MAAK,oBAAMA,WAAW,MAClC,UAAa,kBADI,0BAHvB,4EASF,kCACA,6FACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,kBADZ,q6BAqBL,uCACA,6FACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,4EAAgG,iBAAGA,WAAW,IAC1G,KAAQ,+EADoF,qBAAhG,eAE8C,iBAAGA,WAAW,IACxD,KAAQ,iFADkC,oCAF9C,yBAMF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,OAA2B,0BAAYA,WAAW,KAAvB,qBAA3B,8BACA,mBAAKA,WAAW,MAAK,oBAAMA,WAAW,MAClC,UAAa,kBADI,kTAUrB,iBAAGA,WAAW,MAAd,0BAA8C,0BAAYA,WAAW,KAAvB,2BAA9C,QAA0H,0BAAYA,WAAW,KAAvB,mBAA1H,gEAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,uDAA2E,0BAAYA,WAAW,KAAvB,mBAC3E,mBAAKA,WAAW,MAAK,oBAAMA,WAAW,MAClC,UAAa,kBADI,+cAiBzB,YAACP,EAAD,CAAoBM,QAAQ,sBAC1B,2DAA0C,0BAAYC,WAAW,KAAvB,qBAA1C,wDAAgK,0BAAYA,WAAW,KAAvB,kBAAhK,iIAGF,kBACE,MAAS,GAET,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,oCAAwD,0BAAYA,WAAW,KAAvB,QACxD,mBAAKA,WAAW,MAAK,oBAAMA,WAAW,MAClC,UAAa,kBADI,iEAMvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,iEAAqF,0BAAYA,WAAW,KAAvB,mBACrF,mBAAKA,WAAW,MAAK,oBAAMA,WAAW,MAClC,UAAa,kBADI,qOAWzB,iCACA,mEAAkD,0BAAYA,WAAW,KAAvB,wCAClD,uBAAK,oBAAMA,WAAW,MAClB,UAAa,kBADZ,2LAUTH,EAAWI,gBAAiB,G,qBCxL5BC,EAAOC,QAAU,CAAC,kBAAoB,iDAAiD,oBAAsB,mDAAmD,KAAO,+BAA+B,IAAM,gC,qBCA5MD,EAAOC,QAAU,CAAC,kBAAoB,iDAAiD,oBAAsB,mDAAmD,cAAgB,yCAAyC,KAAO,+BAA+B,SAAW,oCAAoC,KAAO,+BAA+B,aAAe,0C,qBCAnWD,EAAOC,QAAU,CAAC,kBAAoB,mDAAmD,oBAAsB,qDAAqD,WAAa,wCAAwC,SAAW,sCAAsC,SAAW,sCAAsC,KAAO,mC,0KCCnTC,ECGI,SAAC,GAAD,MAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,IAAiBC,YAAjB,MAAwB,GAAxB,SACjB,mBACEC,UAAWC,IAAGC,IAAOC,YAAR,OACVD,IAAOE,UAAWL,EAAKM,OADb,EAEVH,IAAOI,UAAqB,SAAVR,EAFR,KAIb,mBAAKE,UAAU,YACb,mBAAKA,UAAU,WACb,mBAAKA,UAAU,iBACb,kBAAIO,GAAG,aAAaP,UAAWE,IAAOM,MACnCX,Q,YCbEY,ECIE,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,iBAA8BC,EAAqB,EAAjCC,WAGhBA,EAEhBC,yBAAe,cAHjBC,KACEC,aAAgBH,WAHiD,EAmB3BD,GAAkBC,EAApDI,EAnB6D,EAmB7DA,QAASC,EAnBoD,EAmBpDA,aAEXC,EAAUF,EAAN,SArB2D,EAmBtCG,OAEUF,EAA/B,aAAwDP,EAElE,OAAOM,EACL,mBAAKhB,UAAS,WAAaoB,OACzB,mBAAKpB,UAAU,WACb,iBAAGA,UAAWqB,OAAMH,KAAMA,GAA1B,8BAKF,M,wBCnCSI,E,kGCabC,OAAA,WAAU,IAAD,EACgBC,KAAK3C,MAApBkB,EADD,EACCA,KAAM0B,EADP,EACOA,KACRC,EAAaD,EAAKE,MAAM,KAAKC,OAAOC,SAASC,OAAO,GAAG,GAEvDC,EAAWhC,EAAKiC,KAAI,SAACC,GAAS,IAAD,EAC3BC,EAAeC,IAAQF,EAAK,CAAEG,OAAO,EAAMC,QAAQ,IACnDC,EAAWJ,IAAiBR,EAG5Ba,EAAkB,IAAIC,OAAUd,EAAd,aAClBR,EAAOO,EAAKgB,QAAQF,EAAiBL,GAC3C,OACE,kBAAIQ,IAAKT,EAAKjC,UAAWC,KAAE,OAAI0C,gBAAeL,EAAnB,GAA+BM,aACxD,YAAC,OAAD,CAAM5C,UAAWqB,OAAMwB,GAAE,GAAK3B,GAC3Be,OAMT,OACE,mBAAKjC,UAAW8C,iBACd,mBAAK9C,UAAU,YACb,mBAAKA,UAAU,WACb,mBAAKA,UAAU,mCACb,uBACE,kBAAIA,UAAW+C,QAAOhB,S,GA3BAiB,IAAMC,W,wBCkE7BC,IAlEC,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAAY,EACFH,EAAlDI,mBADoD,MACtC,GADsC,EAClC7C,EAAgCyC,EAAhCzC,iBAAkB8C,EAAcL,EAAdK,UAExCzD,EAKAwD,EALAxD,KACAF,EAIA0D,EAJA1D,MACO4D,EAGPF,EAHAzD,MACA4D,EAEAH,EAFAG,YACAC,EACAJ,EADAI,SAGIC,EAAkBC,cAAlBD,cAIIE,EACRjD,yBAAe,aADfC,KAAQgD,WAUNrC,EAAOqC,EACPT,EAASU,SAAStB,QAAQqB,EAAY,IACtCT,EAASU,SAUTrC,EAPG3B,EAED0B,EAAKE,MAAM,KAAKC,OAAOC,SAASC,OAAO,GAAG,IAC1CK,IAAQpC,EAAK,GAAI,CAAEqC,OAAO,IAHZ,GAShBtC,EAAQ2D,GAAoBG,EAElC,OACI,YAACI,EAAA,EAAD,CACIjE,KAAMA,EACNkE,UAAU,EACVnE,MAAOA,EACPoE,UAAWrE,EACXsE,gBAAiBT,EACjBU,aAAcT,EACdH,UAAWA,GACX,YAAC,EAAD,CACI3D,MAAOyD,EAAQ,YAACA,EAAD,MAAYzD,EAC3BwE,MAAM,QACNtE,KAAMA,EACND,MAAOA,IAEVC,GAAQ,YAAC,EAAD,CAAU0B,KAAMA,EAAM1B,KAAMA,EAAM2B,WAAYA,IACvD,YAAC4C,EAAA,EAAD,CAAMC,QAAM,GACPnB,EACD,YAAC,EAAD,CAAU1C,iBAAkBA,KAGhC,YAAC8D,EAAA,EAAD","file":"component---src-pages-getting-started-icc-index-mdx-fd6702f8740d88fbf18a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Easily log in to an IBM Cloud account and cluster`}</p>\n    </PageDescription>\n    <p>{`The ICC command-line tool makes it easy to log into an IBM Cloud account and a cluster in that account. It is the equivalent of running this for Kubernetes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`ibmcloud login <a whole bunch of paratemers>\nibmcloud ks cluster <some more parameters>\n`}</code></pre>\n    <p>{`or this for OpenShift:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`ibmcloud login <a whole bunch of paratemers>\noc login <some more parameters>\n`}</code></pre>\n    <p>{`If you have multiple clusters, especially in multiple accounts, ICC makes it easy to switch your command line between clusters. All ICC requires is your API key for each account.`}</p>\n    <h2>{`Install ICC`}</h2>\n    <p>{`To install ICC, perform `}<a parentName=\"p\" {...{\n        \"href\": \"/getting-started/dev-env-setup\"\n      }}>{`Developer Tools Setup`}</a>{` to install all of the CLIs including ICC.`}</p>\n    <h3>{`Install yq`}</h3>\n    <p>{`ICC (currently) requires `}<inlineCode parentName=\"p\">{`yq`}</inlineCode>{`, and it has to be v3 (v4 doesn’t have the commands ICC needs). Check to see if `}<inlineCode parentName=\"p\">{`yq`}</inlineCode>{` is currently installed and if it’s version 3:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`$ which yq\n/usr/local/bin/yq\n$ yq -V\nyq version 3.3.2\n`}</code></pre>\n    <p>{`If you don’t have `}<inlineCode parentName=\"p\">{`yq`}</inlineCode>{` installed, follow either of these instructions:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Installing yq in `}<a parentName=\"li\" {...{\n          \"href\": \"https://docs.pivotal.io/scdf-k8s/1-1/installing-command-line-tools.html#macos\"\n        }}>{`Installing Command-Line Tools > For macOS`}</a>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Download the `}<a parentName=\"li\" {...{\n              \"href\": \"https://github.com/mikefarah/yq/releases/tag/3.4.1\"\n            }}>{`latest v3 build`}</a></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Install `}<a parentName=\"li\" {...{\n          \"href\": \"https://formulae.brew.sh/formula/yq@3\"\n        }}>{`yq v3 using Homebrew`}</a>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`$ brew install yq@3\n`}</code></pre>\n        {` And follow the instructions to add the install directory to your path.`}</li>\n    </ul>\n    <h3>{`ICC help`}</h3>\n    <p>{`Once ICC (and yq) is installed, you can view help for how to use it:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`icc --help\nUsage: icc [nickname] [--account {ACCOUNT_FILTER}] [--resourceGroup {RG_FILTER}] [--generate [{ACCOUNT_FILTER}]] [--nickname [{cluster name}]]\n\n  Logs into an IBM Cloud cluster\n\nModes:\n  cluster login   - icc {nickname}\n  print config    - icc [--account {account name}] [--resourceGroup {resourceGroupName}]\n  generate config - icc --generate [{account name}]\n  update nickname - icc --nickname [{cluster name}]\n\nArgs:\n  nickname - the cluster nickname\n  --account, -a - filter to print the config for the provided account\n  --resourceGroup, -g - filter to print the config for the provided resource group\n  --generate - flag to generate the config from the account, optionally restricted to {account name}. The --generate process appends to the existing configuration\n  --nickname - update the nickname for a cluster, optionally passing the cluster name after the flag\n  --help, -h - display help\n`}</code></pre>\n    <h2>{`Configure ICC`}</h2>\n    <p>{`Once ICC is installed, before you can use it, you need to set it up:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Get your API key for your IBM Cloud account. If you don’t have one, then `}<a parentName=\"p\" {...{\n            \"href\": \"https://cloud.ibm.com/docs/account?topic=account-userapikey#create_user_key\"\n          }}>{`create an API key`}</a>{`. Remember, `}<a parentName=\"p\" {...{\n            \"href\": \"https://cloud.ibm.com/docs/account?topic=account-manapikey#ibm-cloud-api-keys\"\n          }}>{`your API key is uniquely for you`}</a>{`, so keep it secret.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run `}<inlineCode parentName=\"p\">{`icc --add-account`}</inlineCode>{` to add you API key to ICC`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`icc --add-account\nPlease provide the nickname for the IBM Cloud account: my-account\nProvide the IBM Cloud API Key for the my-account account: <hidden>\nAccount information added for my-account\n\nNext steps:\n- Run '/Users/bwoolf/bin/icc --generate' to generate the cluster config from the account\n`}</code></pre>\n        <p parentName=\"li\">{`This creates the files `}<inlineCode parentName=\"p\">{`~/ibmcloud-account.yaml`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`~/ibmcloud.yaml`}</inlineCode>{`. The first file contains your API keys, so keep it secret.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Get the cluster metadata for the account by running `}<inlineCode parentName=\"p\">{`icc --generate`}</inlineCode></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`icc --generate\nGenerate config for accounts: my-account\nLogging in to account: my-account\nProcessing provider: classic\nProcessing provider: vpc-gen2\nProcessing provider: satellite\nConfig file generated/updated: /Users/bwoolf/ibmcloud.yaml\n\nNext steps:\n- Run '/Users/bwoolf/bin/icc' to list the clusters\n- Run '/Users/bwoolf/bin/icc {nickname}' to log into a cluster\n- Run '/Users/bwoolf/bin/icc --nickname' to update the nickname for a cluster\n`}</code></pre>\n      </li>\n    </ol>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`If you have multiple accounts, run `}<inlineCode parentName=\"p\">{`icc --add-account`}</inlineCode>{` multiple times to add the different API Keys. Also, `}<inlineCode parentName=\"p\">{`icc --generate`}</inlineCode>{` can be run multiple times to refresh the list of available clusters. Any nicknames that have been added\nwill be preserved.`}</p>\n    </InlineNotification>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`List the available clusters with `}<inlineCode parentName=\"p\">{`icc`}</inlineCode></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`icc\nmy-cluster - my-account/my-resource-group/my-cluster\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Optionally, give a short nickname for your cluster by running `}<inlineCode parentName=\"p\">{`icc --nickname`}</inlineCode></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`icc --nickname my-cluster\nProvide the new nickname for my-cluster: my-nickname\nNickname for my-cluster updated to my-nickname in /Users/bwoolf/ibmcloud.yaml\n\nicc\nmy-nickname - my-account/my-resource-group/my-cluster\n`}</code></pre>\n      </li>\n    </ol>\n    <h2>{`Use ICC`}</h2>\n    <p>{`You can now log in to a cluster by running `}<inlineCode parentName=\"p\">{`icc [cluster name|cluster nickname]`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`icc my-cluster\nLogging into ibmcloud: us-south/my-resource-group\nLogging into OpenShift cluster my-cluster with server url https://x123-z.us-south.containers.cloud.ibm.com:31047\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import React from 'react';\nimport slugify from 'slugify';\nimport {graphql, useStaticQuery} from 'gatsby';\n\nimport Utils from 'gatsby-theme-carbon/src/components/Utils';\nimport Layout from 'gatsby-theme-carbon/src/components/Layout';\nimport PageHeader from 'gatsby-theme-carbon/src/components/PageHeader';\nimport EditLink from 'gatsby-theme-carbon/src/components/EditLink';\nimport PageTabs from 'gatsby-theme-carbon/src/components/PageTabs';\nimport Main from 'gatsby-theme-carbon/src/components/Main';\nimport useMetadata from 'gatsby-theme-carbon/src/util/hooks/useMetadata';\n\n// Copy of gatsby-theme-carbon/src/templates/Default with the NextPrevious widget removed\n\nconst Default = ({ pageContext, children, location, Title }) => {\n    const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n    const {\n        tabs,\n        title,\n        theme: frontmatterTheme,\n        description,\n        keywords,\n    } = frontmatter;\n\n    const { interiorTheme } = useMetadata();\n\n    // get the path prefix if it exists\n    const {\n        site: { pathPrefix },\n    } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY1 {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n    // let gatsby handle prefixing\n    const slug = pathPrefix\n        ? location.pathname.replace(pathPrefix, '')\n        : location.pathname;\n\n    const getCurrentTab = () => {\n        if (!tabs) return '';\n        return (\n            slug.split('/').filter(Boolean).slice(-1)[0] ||\n            slugify(tabs[0], { lower: true })\n        );\n    };\n\n    const currentTab = getCurrentTab();\n\n    const theme = frontmatterTheme || interiorTheme;\n\n    return (\n        <Layout\n            tabs={tabs}\n            homepage={false}\n            theme={theme}\n            pageTitle={title}\n            pageDescription={description}\n            pageKeywords={keywords}\n            titleType={titleType}>\n            <PageHeader\n                title={Title ? <Title /> : title}\n                label=\"label\"\n                tabs={tabs}\n                theme={theme}\n            />\n            {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n            <Main padded>\n                {children}\n                <EditLink relativePagePath={relativePagePath} />\n            </Main>\n            {/*Remove NextPrevious*/}\n            <Utils />\n        </Layout>\n    );\n};\n\nexport default Default;\n"],"sourceRoot":""}